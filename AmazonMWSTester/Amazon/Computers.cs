using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AmazonMWSTester.Amazon
{
	public partial class Computers : ProductProductData
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class ComputersProductType { private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlElementAttribute("CarryingCaseOrBag", typeof(CarryingCaseOrBag))]
[System.Xml.Serialization.XmlElementAttribute("Computer", typeof(Computer))]
[System.Xml.Serialization.XmlElementAttribute("ComputerAddOn", typeof(ComputerAddOn))]
[System.Xml.Serialization.XmlElementAttribute("ComputerComponent", typeof(ComputerComponent))]
[System.Xml.Serialization.XmlElementAttribute("ComputerCoolingDevice", typeof(ComputerCoolingDevice))]
[System.Xml.Serialization.XmlElementAttribute("ComputerDriveOrStorage", typeof(ComputerDriveOrStorage))]
[System.Xml.Serialization.XmlElementAttribute("ComputerInputDevice", typeof(ComputerInputDevice))]
[System.Xml.Serialization.XmlElementAttribute("ComputerProcessor", typeof(ComputerProcessor))]
[System.Xml.Serialization.XmlElementAttribute("ComputerSpeaker", typeof(ComputerSpeaker))]
[System.Xml.Serialization.XmlElementAttribute("FlashMemory", typeof(FlashMemory))]
[System.Xml.Serialization.XmlElementAttribute("InkOrToner", typeof(InkOrToner))]
[System.Xml.Serialization.XmlElementAttribute("Keyboards", typeof(Keyboards))]
[System.Xml.Serialization.XmlElementAttribute("MemoryReader", typeof(MemoryReader))]
[System.Xml.Serialization.XmlElementAttribute("Monitor", typeof(Monitor))]
[System.Xml.Serialization.XmlElementAttribute("Motherboard", typeof(Motherboard))]
[System.Xml.Serialization.XmlElementAttribute("NetworkingDevice", typeof(NetworkingDevice))]
[System.Xml.Serialization.XmlElementAttribute("NotebookComputer", typeof(NotebookComputer))]
[System.Xml.Serialization.XmlElementAttribute("PersonalComputer", typeof(PersonalComputer))]
[System.Xml.Serialization.XmlElementAttribute("Printer", typeof(Printer))]
[System.Xml.Serialization.XmlElementAttribute("RamMemory", typeof(RamMemory))]
[System.Xml.Serialization.XmlElementAttribute("Scanner", typeof(Scanner))]
[System.Xml.Serialization.XmlElementAttribute("SoundCard", typeof(SoundCard))]
[System.Xml.Serialization.XmlElementAttribute("SystemCabinet", typeof(SystemCabinet))]
[System.Xml.Serialization.XmlElementAttribute("SystemPowerDevice", typeof(SystemPowerDevice))]
[System.Xml.Serialization.XmlElementAttribute("TabletComputer", typeof(TabletComputer))]
[System.Xml.Serialization.XmlElementAttribute("VideoCard", typeof(VideoCard))]
[System.Xml.Serialization.XmlElementAttribute("VideoProjector", typeof(VideoProjector))]
[System.Xml.Serialization.XmlElementAttribute("Webcam", typeof(Webcam))] public object Item { get; set; } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(ComputersProductType)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum ComputersLithiumBatteryPackaging { batteries_contained_in_equipment, batteries_only, batteries_packed_with_equipment, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum VariationDataParentage { parent, child, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("ConnectionInterface", Namespace = "", IsNullable = false)] public enum ConnectionTypeValues { express_card, firewire_1600, firewire_3200, firewire_400, firewire_800, firewire_esata, pci, pci_x_1, pci_x_16, pci_x_4, pci_x_8, pcmcia, [System.Xml.Serialization.XmlEnumAttribute("usb1.0")] usb10, [System.Xml.Serialization.XmlEnumAttribute("usb1.1")] usb11, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum PressureLevelUnitOfMeasure { levels, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum TabletDataRateUnitOfMeasure { PPS, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum TabletResolutionUnitOfMeasure { lpi, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum DataTransferSpeedUnitOfMeasure { kbps, mbps, gbps, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class ComputerComponentComponentMemoryStorageCapacity { private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlAttributeAttribute()] public MemorySizeUnitOfMeasure unitOfMeasure { get; set; }[System.Xml.Serialization.XmlTextAttribute(DataType = "positiveInteger")] public string Value { get; set; } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(ComputerComponentComponentMemoryStorageCapacity)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum ComponentWirelessTypeValues {[System.Xml.Serialization.XmlEnumAttribute("2.4_ghz_radio_frequency")] Item24_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("5.8_ghz_radio_frequency")] Item58_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("54g")] Item54g, [System.Xml.Serialization.XmlEnumAttribute("802_11_A")] Item802_11_A, [System.Xml.Serialization.XmlEnumAttribute("802_11_AB")] Item802_11_AB, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABG")] Item802_11_ABG, [System.Xml.Serialization.XmlEnumAttribute("802_11_AG")] Item802_11_AG, [System.Xml.Serialization.XmlEnumAttribute("802_11_B")] Item802_11_B, [System.Xml.Serialization.XmlEnumAttribute("802_11_BGN")] Item802_11_BGN, [System.Xml.Serialization.XmlEnumAttribute("802_11_G")] Item802_11_G, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_108Mbps")] Item802_11_G_108Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_54Mbps")] Item802_11_G_54Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_N")] Item802_11_N, [System.Xml.Serialization.XmlEnumAttribute("900_mhz_radio_frequency")] Item900_mhz_radio_frequency, bluetooth, dect, [System.Xml.Serialization.XmlEnumAttribute("dect_6.0")] dect_60, infrared, irda, radio_frequency, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("DigitalMediaFormat", Namespace = "", IsNullable = false)] public enum DigitalMediaFormatTypeValues {[System.Xml.Serialization.XmlEnumAttribute("3480_tape_cartridge")] Item3480_tape_cartridge, [System.Xml.Serialization.XmlEnumAttribute("4_mm_tape")] Item4_mm_tape, [System.Xml.Serialization.XmlEnumAttribute("6250_magstar_tape")] Item6250_magstar_tape, [System.Xml.Serialization.XmlEnumAttribute("8_mm")] Item8_mm, [System.Xml.Serialization.XmlEnumAttribute("8_mm_tape")] Item8_mm_tape, abridged, [System.Xml.Serialization.XmlEnumAttribute("ac-3")] ac3, adobe_ebook_reader, adpcm, adult, aiff, ali, alx, amazon_ebook_reader, anamorphic, animated, antique_books, antique_reproduction_map, atlas, atrac3, audiobook, aus_import, authorized_bootleg, avi, bargain_price, best_of, blu_ray, blu_spec_cd, blu_spec_cd_and_dvd, bookplus_reader, box_calendar, box_set, braille, bsides, bw, cab, cast_recording, ca_import, cd, [System.Xml.Serialization.XmlEnumAttribute("cd-4")] cd4, [System.Xml.Serialization.XmlEnumAttribute("cd-6")] cd6, [System.Xml.Serialization.XmlEnumAttribute("cd-single")] cdsingle, cd_and_blu_ray, cd_and_dvd, cd_rom, classical, clay_animation, clean, [System.Xml.Serialization.XmlEnumAttribute("closed-captioned")] closedcaptioned, clv, cod, collectors_edition, color, compact_flash, compilation, complete, copy_protected_cd, criterion, csv, cutout, cx_encoding, dat_tape, deluxe_edition, desk_calendar, dff, digital_8, digital_sound, directors_cut, diskette35, diskette525, dlt, doc, dolby, double_cd, double_lp, drama_enhanced, dts_stereo, dual_disc, dubbed, dvd_and_blu_ray, dvd_audio, dvd_ram, dvd_region, dvd_rom, dvd_single, dvd_video, dvt, electronic_software_download, engagement_calendar, enhanced, everybook, exe, explicit_lyrics, extended_play, extra_tracks, facsimile, flash, folded_map, [System.Xml.Serialization.XmlEnumAttribute("full-length")] fulllength, full_screen, gif, globe, gold_cd, hd_dvd, [System.Xml.Serialization.XmlEnumAttribute("hi-fidelity")] hifidelity, highlights, hi_8, hqcd, html, hybrid_sacd, illustrated, import, ipk, jad, jar, jpg, jp_import, karaoke, kindle_blog, kindle_book, kindle_magazine, kindle_newspaper, large_print, laser_printed, letterboxed, limited_collectors_edition, limited_edition, live, magazine_subscription, maxi_single, mdb, mde, memory_stick, microsoft_reader_desktop, minidisc, minidv, miniseries, mobipocket_ebook, mono, movie_tie_in, mp3_audio, mpeg, mpeg_2_5, multisystem, mvi, mvi_plus_cd, newsletter_subscription, newspaper_subscription, nintendo, ntsc, numbered_edition, online_game_code, original_antique_map, original_recording, pal, palm_ebook_reader, pdb, pdf, photocopy, playstation, popout_map, pqa, prc, print, print_and_cd_rom, print_and_dvd_rom, prn, processor386, pulldown_wall_map, raised_relief_map, rar, realaudio_g2, real_audio, registration_code, reissued, remastered, remixes, rental, restored, ringle, roughcut, sacd, secam, sega, sheet_music, shm_cd, silent, sis, sit, smart_media, soundtrack, special_edition, special_extended_version, special_limited_edition, student_edition, studio, subtitled, supratitled, surround, tarot, teachers_edition, threeD, thx, tiff, topaz_ebook, tv_tie_in, txt, uk_import, ultimate_edition, umd, unabridged, unknown_format, us_import, value_price, vhd, vhs, vhs_c, vqf, wall_calendar, wall_map, wav, widescreen, wks, wma, xd_card, xls, xml, zip, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum AirflowUnitOfMeasure { CFM, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("InternalConnector", Namespace = "", IsNullable = false)] public enum InternalConnectorTypeValues { eide, fibre_channel, ide, pci_express_x4, pci_express_x8, serial_scsi, serial_ata150, serial_ata300, serial_ata600, scsi, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("DockingStationExternalInterface", Namespace = "", IsNullable = false)] public enum DockingStationExternalInterfaceTypeValues { firewire_1600, firewire_3200, firewire_400, firewire_800, firewire_esata, [System.Xml.Serialization.XmlEnumAttribute("usb1.0")] usb10, [System.Xml.Serialization.XmlEnumAttribute("usb1.1")] usb11, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("InterfaceType", Namespace = "", IsNullable = false)] public enum InterfaceTypeValues { eide, fibre_channel, ide, pci_x_16, pci_x_4, pci_x_8, sas, sata_1_5_gb, sata_3_0_gb, sata_6_0_gb, scsi, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("InputDeviceInterfaceTechnology", Namespace = "", IsNullable = false)] public enum InputDeviceInterfaceTechnologyTypeValues {[System.Xml.Serialization.XmlEnumAttribute("1_4_inch_audio")] Item1_4_inch_audio, [System.Xml.Serialization.XmlEnumAttribute("2_5_mm_audio")] Item2_5_mm_audio, [System.Xml.Serialization.XmlEnumAttribute("3_5_mm_audio")] Item3_5_mm_audio, bluetooth, infrared, multipronged_audio, [System.Xml.Serialization.XmlEnumAttribute("ps/2")] ps2, radio_frequency, usb, [System.Xml.Serialization.XmlEnumAttribute("usb1.0")] usb10, [System.Xml.Serialization.XmlEnumAttribute("usb1.1")] usb11, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("ProcessorSeries", Namespace = "", IsNullable = false)] public enum ProcessorSeriesTypeValues { athlon_64, athlon_64_x2, intel_atom_230, intel_atom_330, intel_atom_n450, intel_atom_n455, intel_atom_z520, intel_atom_z530, intel_xeon, pentium_4, sempron, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("InputType", Namespace = "", IsNullable = false)] public enum InputTypeValues { firewire_1600, firewire_3200, firewire_400, firewire_800, firewire_esata, [System.Xml.Serialization.XmlEnumAttribute("usb1.0")] usb10, [System.Xml.Serialization.XmlEnumAttribute("usb1.1")] usb11, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("MemoryCardType", Namespace = "", IsNullable = false)] public enum MemoryCardTypeValues { compactflash_type_i, compactflash_type_ii, hs_mmc, memory_stick, memory_stick_duo, memory_stick_micro, memory_stick_pro, memory_stick_pro_duo, memory_stick_pro_hg_duo, memory_stick_select, memory_stick_xc, memory_stick_xc_hg_micro, memory_stick_xc_micro, MiCard, microsd, micro_sdhc, micro_sdxc, minisd, mini_sdhc, mini_sdxc, mmc_micro, multimedia_card, multimedia_card_mobile, multimedia_card_plus, rs_mmc, sdhc, sdio, sdxc, secure_digital, secure_mmc, smartmedia_card, transflash, xd_picture_card, xd_picture_card_h, xd_picture_card_m, xd_picture_card_m_plus, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("SpeedClassRating", Namespace = "", IsNullable = false)] public enum SpeedClassRatingTypeValues { class_10, class_2, class_4, class_6, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("WirelessStandard", Namespace = "", IsNullable = false)] public enum WirelessStandardTypeValues {[System.Xml.Serialization.XmlEnumAttribute("802_11_A")] Item802_11_A, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABG")] Item802_11_ABG, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABGN")] Item802_11_ABGN, [System.Xml.Serialization.XmlEnumAttribute("802_11_AG")] Item802_11_AG, [System.Xml.Serialization.XmlEnumAttribute("802_11_B")] Item802_11_B, [System.Xml.Serialization.XmlEnumAttribute("802_11_G")] Item802_11_G, bluetooth, infrared, radio_frequency, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("WirelessInputDeviceProtocol", Namespace = "", IsNullable = false)] public enum WirelessInputDeviceProtocolTypeValues {[System.Xml.Serialization.XmlEnumAttribute("2.4_ghz_radio_frequency")] Item24_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("5.8_ghz_radio_frequency")] Item58_ghz_radio_frequency, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("WirelessInputDeviceTechnology", Namespace = "", IsNullable = false)] public enum WirelessInputDeviceTechnologyTypeValues { bluetooth, infrared, [System.Xml.Serialization.XmlEnumAttribute("ps/2")] ps2, radio_frequency, usb, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("CompatibleMemoryCard", Namespace = "", IsNullable = false)] public enum CompatibleMemoryCardTypeValues { compactflash_type_i, compactflash_type_ii, hs_mmc, memory_stick, memory_stick_duo, memory_stick_micro, memory_stick_pro, memory_stick_pro_duo, memory_stick_pro_hg_duo, memory_stick_select, memory_stick_xc, memory_stick_xc_hg_micro, memory_stick_xc_micro, MiCard, microsd, micro_sdhc, micro_sdxc, minisd, mini_sdhc, mini_sdxc, mmc_micro, multimedia_card, multimedia_card_mobile, multimedia_card_plus, rs_mmc, sdhc, sdio, sdxc, secure_digital, secure_mmc, smartmedia_card, transflash, xd_picture_card, xd_picture_card_h, xd_picture_card_m, xd_picture_card_m_plus, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("CardReaderInterface", Namespace = "", IsNullable = false)] public enum CardReaderInterfaceTypeValues { firewire_1600, firewire_3200, firewire_400, firewire_800, firewire_esata, [System.Xml.Serialization.XmlEnumAttribute("usb1.0")] usb10, [System.Xml.Serialization.XmlEnumAttribute("usb1.1")] usb11, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("MonitorConnectors", Namespace = "", IsNullable = false)] public enum MonitorConnectorsTypeValues { audio_video_port, dmi, ethernet, gameport, hdmi, ieee_1394, [System.Xml.Serialization.XmlEnumAttribute("ps/2")] ps2, serial_interface, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, vga, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("GraphicsCardInterface", Namespace = "", IsNullable = false)] public enum GraphicsCardInterfaceTypeValues { agp, integrated, pci, pci_e, unknown, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("MaxEthernetSpeed", Namespace = "", IsNullable = false)] public enum MaxEthernetSpeedTypeValues { ethernet_10base_t, ethernet_100base_t, ethernet_100base_tx, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("IPProtocolStandards", Namespace = "", IsNullable = false)] public enum IPProtocolStandardsTypeValues {[System.Xml.Serialization.XmlEnumAttribute("802_11_ABG")] Item802_11_ABG, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABGN")] Item802_11_ABGN, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("ModemType", Namespace = "", IsNullable = false)] public enum ModemTypeValues { analog_modem, data_fax_voice, isdn_modem, cable, data_modem, network_modem, cellular, digital, unknown_modem_type, csu, dsl, voice, data_fax, dsu, winmodem, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("AdditionalDrives", Namespace = "", IsNullable = false)] public enum AdditionalDrivesTypeValues { blu_ray, blu_ray_re, blu_ray_rom, blu_ray_rw, cd_rom, cd_rw, dvd, dvd_cd_rw, dvd_minus_rw, dvd_plus_minus_rw, dvd_plus_r, dvd_plus_rw, dvd_r, dvd_ram, dvd_rom, dvd_rw, floppy, ide_tape_drive, jazz, scsi_cdrom, scsi_tape_drive, thumb_drive, zip, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("ComputerMemoryType", Namespace = "", IsNullable = false)] public enum ComputerMemoryTypeValues {[System.Xml.Serialization.XmlEnumAttribute("72_pin_edo_simm")] Item72_pin_edo_simm, ddr2_sdram, ddr3_sdram, ddr_dram, ddr_sdram, dimm, dram, edo_dram, eeprom, eprom, fpm_dram, fpm_ram, l2_cache, micro_dimm, pc2_4200, pc2_4300, pc2_5300, pc2_5400, pc2_6000, pc_100_sdram, pc_1066, pc_133_sdram, pc_1600, pc_2100_ddr, pc_2700_ddr, pc_3000, pc_3200_ddr, pc_3500_ddr, pc_3700, pc_4000_ddr, pc_4200, pc_4300, pc_4400, pc_66_sdram, pc_800, rambus, rdram, rimm, sdram, sgram, simm, sipp, sldram, sodimm, sorimm, sram, unknown, vram, wram, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("ComputerWirelessType", Namespace = "", IsNullable = false)] public enum ComputerWirelessTypeValues {[System.Xml.Serialization.XmlEnumAttribute("2.4_ghz_radio_frequency")] Item24_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("5.8_ghz_radio_frequency")] Item58_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("54g")] Item54g, [System.Xml.Serialization.XmlEnumAttribute("802_11_A")] Item802_11_A, [System.Xml.Serialization.XmlEnumAttribute("802_11_AB")] Item802_11_AB, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABG")] Item802_11_ABG, [System.Xml.Serialization.XmlEnumAttribute("802_11_AG")] Item802_11_AG, [System.Xml.Serialization.XmlEnumAttribute("802_11_B")] Item802_11_B, [System.Xml.Serialization.XmlEnumAttribute("802_11_BGN")] Item802_11_BGN, [System.Xml.Serialization.XmlEnumAttribute("802_11_G")] Item802_11_G, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_108Mbps")] Item802_11_G_108Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_54Mbps")] Item802_11_G_54Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_N")] Item802_11_N, [System.Xml.Serialization.XmlEnumAttribute("900_mhz_radio_frequency")] Item900_mhz_radio_frequency, bluetooth, dect, [System.Xml.Serialization.XmlEnumAttribute("dect_6.0")] dect_60, infrared, irda, radio_frequency, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class NotebookComputerGraphicsCard { private MemorySizeDimension graphicsCardRamSizeField; private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string GraphicsCardDescription { get; set; } public GraphicsCardInterfaceTypeValues GraphicsCardInterface { get; set; } public NotebookComputerGraphicsCard() { this.graphicsCardRamSizeField = new MemorySizeDimension(); } public MemorySizeDimension GraphicsCardRamSize { get { return this.graphicsCardRamSizeField; } set { this.graphicsCardRamSizeField = value; } } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(NotebookComputerGraphicsCard)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("HardDriveInterface", Namespace = "", IsNullable = false)] public enum HardDriveInterfaceTypeValues { ata, ata100, ata133, ata_2, ata_3, ata_4, ata_5, atapi, dma, eide, eio, esata, esdi, ethernet, ethernet_100base_t, ethernet_100base_tx, ethernet_10_100_1000, ethernet_10base_t, fast_scsi, fast_wide_scsi, fata, fc_al, fc_al_2, fdd, fibre_channel, firewire, ide, ieee_1284, ieee_1394b, iscsi, lvds, pc_card, pci_express_x16, pci_express_x4, pci_express_x8, raid, scsi, serial_ata, serial_ata150, serial_ata300, serial_ata600, serial_scsi, solid_state, ssa, st412, ultra2_scsi, ultra2_wide_scsi, ultra3_scsi, ultra_160_scsi, ultra_320_scsi, ultra_ata, ultra_scsi, ultra_wide_scsi, unknown, usb, [System.Xml.Serialization.XmlEnumAttribute("usb_1.1")] usb_11, [System.Xml.Serialization.XmlEnumAttribute("usb_2.0")] usb_20, [System.Xml.Serialization.XmlEnumAttribute("usb_2.0_3.0")] usb_20_30, [System.Xml.Serialization.XmlEnumAttribute("usb_3.0")] usb_30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("TabletInputMethod", Namespace = "", IsNullable = false)] public enum TabletInputMethodTypeValues { buttons, dial, handwriting_recognition, keyboard, keypad, keypad_stroke, [System.Xml.Serialization.XmlEnumAttribute("keypad_stroke")] keypad_stroke1, microphone, touch_screen, touch_screen_stylus_pen, trackpoint_pointing_device, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("WirelessCarrier", Namespace = "", IsNullable = false)] public enum WirelessCarrierTypeValues {[System.Xml.Serialization.XmlEnumAttribute("att ")] att, sprintpcs, t_mobile, verizon, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("WirelessType", Namespace = "", IsNullable = false)] public enum WirelessTypeValues {[System.Xml.Serialization.XmlEnumAttribute("2.4_ghz_radio_frequency")] Item24_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("5.8_ghz_radio_frequency")] Item58_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("802_11_A")] Item802_11_A, [System.Xml.Serialization.XmlEnumAttribute("802_11_AB")] Item802_11_AB, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABG")] Item802_11_ABG, [System.Xml.Serialization.XmlEnumAttribute("802_11_AG")] Item802_11_AG, [System.Xml.Serialization.XmlEnumAttribute("802_11_B")] Item802_11_B, [System.Xml.Serialization.XmlEnumAttribute("802_11_BGN")] Item802_11_BGN, [System.Xml.Serialization.XmlEnumAttribute("802_11_G")] Item802_11_G, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_108Mbps")] Item802_11_G_108Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_N")] Item802_11_N, [System.Xml.Serialization.XmlEnumAttribute("900_mhz_radio_frequency")] Item900_mhz_radio_frequency, bluetooth, dect, [System.Xml.Serialization.XmlEnumAttribute("dect_6.0")] dect_60, infrared, irda, radio_frequency, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("CardReader", Namespace = "", IsNullable = false)] public enum CardReaderTypeValues { compactflash_type_i, compactflash_type_ii, hs_mmc, memory_stick, memory_stick_duo, memory_stick_micro, memory_stick_pro, memory_stick_pro_duo, memory_stick_pro_hg_duo, memory_stick_select, memory_stick_xc, memory_stick_xc_hg_micro, memory_stick_xc_micro, MiCard, microsd, micro_sdhc, micro_sdxc, minisd, mini_sdhc, mini_sdxc, mmc_micro, multimedia_card, multimedia_card_mobile, multimedia_card_plus, rs_mmc, sdhc, sdio, sdxc, secure_digital, secure_mmc, smartmedia_card, transflash, xd_picture_card, xd_picture_card_h, xd_picture_card_m, xd_picture_card_m_plus, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("GraphicsRAMType", Namespace = "", IsNullable = false)] public enum GraphicsRAMTypeValues {[System.Xml.Serialization.XmlEnumAttribute("72_pin_edo_simm")] Item72_pin_edo_simm, ddr2_sdram, ddr3_sdram, ddr4_sdram, ddr5_sdram, ddr_dram, ddr_sdram, dimm, dram, edo_dram, eeprom, eprom, fpm_dram, fpm_ram, gddr3, gddr4, gddr5, l2_cache, micro_dimm, pc2_4200, pc2_4300, pc2_5300, pc2_5400, pc2_6000, pc_100_sdram, pc_1066, pc_133_sdram, pc_1600, pc_2100_ddr, pc_2700_ddr, pc_3000, pc_3200_ddr, pc_3500_ddr, pc_3700, pc_4000_ddr, pc_4200, pc_4300, pc_4400, pc_66_sdram, pc_800, rambus, rdram, rimm, sdram, sgram, shared, simm, sipp, sldram, sodimm, sorimm, sram, unknown, vram, wram, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("ProcessorType", Namespace = "", IsNullable = false)] public enum ProcessorTypeValues {[System.Xml.Serialization.XmlEnumAttribute("5x86")] Item5x86, [System.Xml.Serialization.XmlEnumAttribute("68000")] Item68000, [System.Xml.Serialization.XmlEnumAttribute("68030")] Item68030, [System.Xml.Serialization.XmlEnumAttribute("68040")] Item68040, [System.Xml.Serialization.XmlEnumAttribute("68328")] Item68328, [System.Xml.Serialization.XmlEnumAttribute("68882")] Item68882, [System.Xml.Serialization.XmlEnumAttribute("68ez328")] Item68ez328, [System.Xml.Serialization.XmlEnumAttribute("68lc040")] Item68lc040, [System.Xml.Serialization.XmlEnumAttribute("6x86")] Item6x86, [System.Xml.Serialization.XmlEnumAttribute("6x86mx")] Item6x86mx, [System.Xml.Serialization.XmlEnumAttribute("8031")] Item8031, [System.Xml.Serialization.XmlEnumAttribute("8032")] Item8032, [System.Xml.Serialization.XmlEnumAttribute("80386")] Item80386, [System.Xml.Serialization.XmlEnumAttribute("80486")] Item80486, [System.Xml.Serialization.XmlEnumAttribute("80486dx2")] Item80486dx2, [System.Xml.Serialization.XmlEnumAttribute("80486slc")] Item80486slc, [System.Xml.Serialization.XmlEnumAttribute("80486sx")] Item80486sx, [System.Xml.Serialization.XmlEnumAttribute("80c186")] Item80c186, [System.Xml.Serialization.XmlEnumAttribute("80c31")] Item80c31, [System.Xml.Serialization.XmlEnumAttribute("80c32")] Item80c32, [System.Xml.Serialization.XmlEnumAttribute("80c88")] Item80c88, alpha_21064a, alpha_21164, alpha_21164a, alpha_21264, alpha_21264a, alpha_21264b, alpha_21264c, alpha_21264d, alpha_21364, alpha_ev7, amd_a_series, amd_c_series, amd_e_series, amd_v_series, arm610, arm710, arm_7100, arm710a, arm710t, arm7500fe, athlon, Athlon_2650e, Athlon_2850e, athlon_4, athlon_64, Athlon_64_2650, Athlon_64_3500, Athlon_64_4200_plus, Athlon_64_4800_plus, athlon_64_for_dtr, athlon_64_fx, Athlon_64_Single_Core_TF_20, Athlon_64_TF_36, athlon_64_x2, athlon_64_X2, Athlon_64_X2_3600_plus, Athlon_64_X2_4000_plus, Athlon_64_X2_4200_plus, Athlon_64_X2_4450B, Athlon_64_X2_4800, Athlon_64_X2_5000_plus, Athlon_64_X2_5050, Athlon_64_X2_5200_plus, Athlon_64_X2_5400_plus, Athlon_64_X2_5600_plus, Athlon_64_X2_6000_plus, Athlon_64_X2_6400_plus, Athlon_64_X2_Dual_Core_3800_plus, Athlon_64_X2_Dual_Core_4400, Athlon_64_X2_Dual_Core_4450, Athlon_64_X2_Dual_Core_L310, Athlon_64_X2_Dual_Core_TK_42, Athlon_64_X2_QL_64_Dual_Core, Athlon_Dual_Core_QL62A, Athlon_II, Athlon_II_170u, Athlon_II_Dual_Core_240e, Athlon_II_Dual_Core_245, Athlon_II_Dual_Core_260, Athlon_II_Dual_Core_260u, Athlon_II_Dual_Core_M320, Athlon_II_Dual_Core_P320, Athlon_II_Dual_Core_P360, Athlon_II_Neo_Single_Core_K125, Athlon_II_Neo_X2_Dual_Core_K325, Athlon_II_Neo_X2_Dual_Core_K625, Athlon_II_Single_Core_160u, Athlon_II_X2_B24, Athlon_II_X2_Dual_Core_170u, Athlon_II_X2_Dual_Core_215, Athlon_II_X2_Dual_Core_235e, Athlon_II_X2_Dual_Core_240, Athlon_II_X2_Dual_Core_240e, Athlon_II_X2_Dual_Core_245, Athlon_II_X2_Dual_Core_250, Athlon_II_X2_Dual_Core_250U, Athlon_II_X2_Dual_Core_255, Athlon_II_X2_Dual_Core_3250e, Athlon_II_X2_Dual_Core_M300, Athlon_II_X2_Dual_Core_M320, Athlon_II_X2_Dual_Core_M340, Athlon_II_X2_Dual_Core_M520, Athlon_II_X2_Dual_Core_P320, Athlon_II_X2_Dual_Core_P340, Athlon_II_X2_Dual_Core_P360, Athlon_II_X2_Dual_Core_QL_60, Athlon_II_X2_Dual_Core_QL_62, Athlon_II_X2_Dual_Core_TK_53, Athlon_II_X2_Dual_Core_TK_57, athlon_ii_x3, Athlon_II_X3_Triple_Core_400E, Athlon_II_X3_Triple_Core_425, Athlon_II_X3_Triple_Core_435, athlon_ii_x4, Athlon_II_X4_Dual_Core_240e, Athlon_II_X4_Quad_Core, Athlon_II_X4_Quad_Core_600E, Athlon_II_X4_Quad_Core_605e, Athlon_II_X4_Quad_Core_615e, Athlon_II_X4_Quad_Core_620, Athlon_II_X4_Quad_Core_630, Athlon_II_X4_Quad_Core_635, Athlon_II_X4_Quad_Core_640, Athlon_II_X4_Quad_Core_645, Athlon_LE_1640, athlon_mp, Athlon_Neo_Single_Core_MV_40, Athlon_Neo_X2_Dual_Core_L325, Athlon_Neo_X2_Dual_Core_L335, Athlon_X2_Dual_Core_4200_plus, Athlon_X2_Dual_Core_5000, Athlon_X2_Dual_Core_5000_plus, Athlon_X2_Dual_Core_5400_plus, Athlon_X2_Dual_Core_7550, Athlon_X2_Dual_Core_7750, Athlon_X2_Dual_Core_QL_66, athlon_xp, athlon_xp_m, Atom_D410, Atom_D425, Atom_D510, Atom_D525, Atom_N230, Atom_N270, Atom_N280, Atom_N330, Atom_N470, Atom_N475, Atom_N550, Atom_Silverthorne, Atom_Z330, Atom_Z515, bulverde, c167cr, celeron, Celeron_450, Celeron_585, Celeron_743, Celeron_900, Celeron_925, Celeron_D_Processor_360, Celeron_D_Processor_420, Celeron_D_Processor_440, Celeron_E1200, Celeron_E1500, Celeron_E3200, Celeron_E3300, Celeron_M_353, Celeron_M_440, Celeron_M_520, Celeron_M_530, Celeron_M_540, Celeron_M_550, Celeron_M_560, Celeron_M_575, Celeron_M_585, Celeron_M_T1400, Celeron_SU2300, Celeron_T1500, Celeron_T3000, Celeron_T4500, Core_2_Duo, Core_2_Duo_E2200, Core_2_Duo_E4000, Core_2_Duo_E4300, Core_2_Duo_E4400, Core_2_Duo_E4500, Core_2_Duo_E4600, Core_2_Duo_E5500, Core_2_Duo_E6300, Core_2_Duo_E6400, Core_2_Duo_E6420, Core_2_Duo_E6600, Core_2_Duo_E7200, Core_2_Duo_E7300, Core_2_Duo_E7400, Core_2_Duo_E7500, Core_2_Duo_E7600, Core_2_Duo_E8400, Core_2_Duo_E8500, Core_2_Duo_L7500, Core_2_Duo_P3750, Core_2_Duo_P7350, Core_2_Duo_P7370, Core_2_Duo_P7450, Core_2_Duo_P7550, Core_2_Duo_P8400, Core_2_Duo_P8600, Core_2_Duo_P8700, Core_2_Duo_P8800, Core_2_Duo_P9500, Core_2_Duo_P9600, Core_2_Duo_SL7100, Core_2_Duo_SL9300, Core_2_Duo_SL9400, Core_2_Duo_SL9600, Core_2_Duo_SP9400, Core_2_Duo_SU4100, Core_2_Duo_SU7300, Core_2_Duo_SU9300, Core_2_Duo_SU9400, Core_2_Duo_SU_9600, Core_2_Duo_T2310, Core_2_Duo_T2330, Core_2_Duo_T2390, Core_2_Duo_T2450, Core_2_Duo_T4200, Core_2_Duo_T5200, Core_2_Duo_T5250, Core_2_Duo_T5270, Core_2_Duo_T5300, Core_2_Duo_T5450, Core_2_Duo_T5470, Core_2_Duo_T5500, Core_2_Duo_T5550, Core_2_Duo_T5600, Core_2_Duo_T5670, Core_2_Duo_T5750, Core_2_Duo_T5800, Core_2_Duo_T5850, Core_2_Duo_T5870, Core_2_Duo_T6400, Core_2_Duo__T6500, Core_2_Duo_T6570, Core_2_Duo_T6600, Core_2_Duo_T6670, Core_2_Duo_T7100, Core_2_Duo_T7200, Core_2_Duo_T7250, Core_2_Duo_T7270, Core_2_Duo_T7300, Core_2_Duo_T7350, Core_2_Duo_T7400, Core_2_Duo_T7500, Core_2_Duo_T7700, Core_2_Duo_T8100, Core_2_Duo_T8300, Core_2_Duo_T8400, Core_2_Duo_T8700, Core_2_Duo_T9300, Core_2_Duo_T9400, Core_2_Duo_T9500, Core_2_Duo_T9550, Core_2_Duo_T9600, Core_2_Duo_T9900, Core_2_Duo_U1400, Core_2_Duo_U2200, Core_2_Duo_U7500, Core_2_Duo_U7700, Core_2_Quad_9600, Core_2_Quad_Q6600, Core_2_Quad_Q6700, Core_2_Quad_Q8200, Core_2_Quad_Q8200S, Core_2_Quad_Q8300, Core_2_Quad_Q8400, Core_2_Quad_Q8400S, Core_2_Quad_Q9000, Core_2_Quad_Q9300, Core_2_Quad_Q9400, Core_2_Quad_Q9400S, Core_2_Quad_Q9450, Core_2_Quad_Q9500, Core_2_Quad_Q9550, Core_2_Solo_SU3500, Core_Duo_1V_L2400, Core_Duo_LV_L2400, Core_Duo_T2250, Core_Duo_T2400, Core_Duo_U2400, core_i3, Core_i3_2330M, Core_i3_330UM, Core_i3_350M, Core_i3_370M, Core_i3_380M, Core_i3_380UM, Core_i3_520M, Core_i3_530, Core_i3_530M, Core_i3_540, Core_i3_540M, Core_i3_550, core_i5, Core_i5_2300, Core_i5_2520M, Core_i5_2540M, Core_i5_430M, Core_i5_430UM, Core_i5_450M, Core_i5_460M, Core_i5_470UM, Core_i5_480M, Core_i5_560M, Core_i5_650, Core_i5_655K, Core_i5_660, Core_i5_750, Core_i5_760, Core_i5__760, core_i7, Core_i7_2600, Core_i7_2620QM, Core_i7_2630QM, Core_i7_2720QM, Core_i7_2820QM, Core_i7_4800MQ, Core_i7_620LM, Core_i7_620M, Core_i7_640LM, Core_i7_640M, Core_i7_640UM, Core_i7_680UM, Core_i7_740QM, Core_i7_860, Core_i7_870, Core_i7_875K, Core_i7_920, Core_i7_930, Core_i7_940, Core_i7_950, Core_i7_960, Core_i7_980, Core_Solo_U1500, crusoe_5800, crusoe_tm3200, crusoe_tm5500, crusoe_tm5600, C_Series_C_50, cyrix_iii, cyrix_mii, duron, eden, eden_esp, eden_esp_4000, eden_esp_5000, eden_esp_6000, eden_esp_7000, efficeon, efficeon_tm8000, efficeon_tm8600, efficion_8800, elansc300, elansc310, elansc400, E_Series_Dual_Core_E_350, E_Series_Processor_E_240, extremecpu, fx_series_eight_core_fx_8100, fx_series_eight_core_fx_8120, fx_series_eight_core_fx_8150, fx_series_quad_core_fx_4100, fx_series_quad_core_fx_4170, fx_series_quad_core_fx_b4150, fx_series_six_core_fx_6100, fx_series_six_core_fx_6120, g3, g4, g5, geode_gx, Geode_GX, geode_gx1, geode_gxlv, geode_gxm, geoden_x, h8s, handheld_engine_cxd2230ga, handheld_engine_cxd2230ga_temp, hitachi_sh3, hypersparc, intel_atom, intel_atom_230, intel_atom_330, intel_atom_n270, intel_atom_n280, intel_atom_n450, intel_atom_n455, intel_atom_z520, intel_atom_z530, intel_celeron_d, intel_centrino, intel_centrino_2, intel_core_2_duo, intel_core_2_duo_mobile, intel_core_2_extreme, intel_core_2_quad, intel_core_2_solo, intel_core_duo, intel_core_solo, Intel_Mobile_CPU, intel_pentium_4_ht, intel_pentium_d, intel_strongarm, intel_xeon, intel_xeon_mp, intel_xscale_pxa250, intel_xscale_pxa255, intel_xscale_pxa263, itanium, itanium_2, k5, k6_2, k6_2e, k6_2_plus, k6_3, k6_iii_plus, k6_mmx, mc68328, mc68ez328, mc68sz328, mc68vz328, mc88110, mediagx, mediagxi, mediagxlv, mediagxm, microsparc_ii, microsparc_iiep, mobile_athlon_4, mobile_athlon_xp_m, mobile_athon_64, mobile_celeron, mobile_duron, mobile_k6_2_plus, mobile_pentium_2, mobile_pentium_3, mobile_pentium_4, mobile_pentium_4_ht, mobile_sempron, motorola_dragonball, nec_mips, none, omap1710, omap310, omap311, omap850, opteron, pa_7100lc, pa_7200, pa_7300lc, pa_8000, pa_8200, pa_8500, pa_8600, pa_8700, pa_8700_plus, pa_8800, pa_8900, pentium, pentium_2, pentium_3, pentium_3_xeon, pentium_4, pentium_4_extreme_edition, Pentium_D_925, Pentium_D_T2060, pentium_dual_core, Pentium_E2140, Pentium_E2160, Pentium_E2180, Pentium_E2200, Pentium_E2220, Pentium_E3200, Pentium_E4400, Pentium_E5200, Pentium_E5300, Pentium_E5301, Pentium_E5400, Pentium_E5500, Pentium_E5700, Pentium_E5800, Pentium_E6300, Pentium_E6600, Pentium_E6700, Pentium_E7200, Pentium_E7400, Pentium_E8400, Pentium_G6950, pentium_iii_e, pentium_iii_s, pentium_ii_xeon, pentium_m, Pentium_M_738, Pentium_M_778, pentium_mmx, Pentium_P6000, Pentium_P6100, Pentium_P6200, pentium_pro, Pentium_SU2700, Pentium_SU4100, Pentium_T2080, Pentium_T2130, Pentium_T2310, Pentium_T2330, Pentium_T2350, Pentium_T2370, Pentium_T2390, Pentium_T3200, Pentium_T3400, Pentium_T4200, Pentium_T4300, Pentium_T4400, Pentium_T4500, Pentium_T6570, Pentium_U5400, Pentium_U5600, pentium_xeon, phenom_dual_core, phenom_ii_x2, Phenom_II_X2_Dual_Core_511, Phenom_II_X2_Dual_Core_550, Phenom_II_X2_Dual_Core_N620, Phenom_II_X2_Dual_Core_N640, Phenom_II_X2_Dual_Core_N650, Phenom_II_X2_Dual_Core_N660, phenom_ii_x3, Phenom_II_X3_Triple_Core_8400, Phenom_II_X3_Triple_Core_8450, Phenom_II_X3_Triple_Core_8550, Phenom_II_X3_Triple_Core_8650, Phenom_II_X3_Triple_Core_B75, Phenom_II_X3_Triple_Core_N830, Phenom_II_X3_Triple_Core_N850, Phenom_II_X3_Triple_Core_P820, Phenom_II_X3_Triple_Core_P840, Phenom_II_X3_Triple_Core_P860, phenom_ii_x4, Phenom_II_X4_Quad_Core_810, Phenom_II_X4_Quad_Core_820, Phenom_II_X4_Quad_Core_830, Phenom_II_X4_Quad_Core_840T, Phenom_II_X4_Quad_Core_910, Phenom_II_X4_Quad_Core_9100E, Phenom_II_X4_Quad_Core_9150, Phenom_II_X4_Quad_Core_920, Phenom_II_X4_Quad_Core_925, Phenom_II_X4_Quad_Core_9350, Phenom_II_X4_Quad_Core_945, Phenom_II_X4_Quad_Core_9450, Phenom_II_X4_Quad_Core_9500, Phenom_II_X4_Quad_Core_955, Phenom_II_X4_Quad_Core_9550, Phenom_II_X4_Quad_Core_9600, Phenom_II_X4_Quad_Core_965, Phenom_II_X4_Quad_Core_9650, Phenom_II_X4_Quad_Core_9750, Phenom_II_X4_Quad_Core_9850, Phenom_II_X4_Quad_Core_9950, Phenom_II_X4_Quad_Core_N820, Phenom_II_X4_Quad_Core_N930, Phenom_II_X4_Quad_Core_N950, Phenom_II_X4_Quad_Core_P920, Phenom_II_X4_Quad_Core_P940, Phenom_II_X4_Quad_Core_P960, phenom_ii_x6, Phenom_II_X6_Six_Core_1035T, Phenom_II_X6_Six_Core_1045T, Phenom_II_X6_Six_Core_1055T, Phenom_II_X6_Six_Core_1090T, phenom_quad_core, phenom_triple_core, power3, power3_ii, power4, power4_plus, power5, powerpc, powerpc_403, powerpc_403ga, powerpc_403_gcx, powerpc_440gx, powerpc_601, powerpc_603, powerpc_603e, powerpc_603ev, powerpc_604, powerpc_604e, powerpc_740_g3, powerpc_750cx, powerpc_750_g3, powerpc_970, powerpc_rs64, powerpc_rs64_ii, powerpc_rs64_iii, powerpc_rs64_iv, pr31700, r10000, r12000, r12000a, r14000, r14000a, r16000, r16000a, r16000b, r3900, r3910, r3912, r4000, r4300, r4310, r4640, r4700, r5000, r5230, rm5231, s3c2410, s3c2440, s3c2442, sa_110, sa_1100, sa_1110, sempron, Sempron_140, Sempron_3500_plus, Sempron_3600_plus, Sempron_LE_1250, Sempron_LE_1300, Sempron_M100, Sempron_M120, sh_4, sh7709a, sis550, snapdragon, sparc, sparc64v, sparc_ii, supersparc, supersparc_ii, tegra, tegra_2_0, tegra_250, tegra_3_0, texas_instruments_omap1510, tm_44, tmpr3922au, turbosparc, turion_64, turion_64_x2, Turion_64_X2_Dual_Core_RM_70, Turion_64_X2_Dual_Core_RM_72, Turion_64_X2_Dual_Core_TL_52, Turion_64_X2_Dual_Core_TL_56, Turion_64_X2_Mobile, Turion_64_X2_RM_74, Turion_64_X2_TK_53, Turion_64_X2_TK_55, Turion_64_X2_TK_57, Turion_64_X2_TK_58, Turion_64_X2_TL_50, Turion_64_X2_TL_57, Turion_64_X2_TL_58, Turion_64_X2_TL_60, Turion_64_X2_TL_62, Turion_64_X2_TL_64_Gold, Turion_64_X2_TL_66, Turion_64_X2_Ultra_ZM_82, Turion_64_X2_Ultra_ZM_85, Turion_64_X2_Ultra_ZM_87, Turion_64_X2_ZM_72, Turion_64_X2_ZM_74, Turion_64_X2_ZM_80, Turion_II_Neo_X2_Dual_Core_K625, Turion_II_Neo_X2_Dual_Core_L625, Turion_II_Ultra_X2_Dual_Core_M600, Turion_II_Ultra_X2_Dual_Core_M620, Turion_II_X2_Dual_Core_M300, Turion_II_X2_Dual_Core_M500, Turion_II_X2_Dual_Core_M520, Turion_II_X2_Dual_Core_P520, Turion_II_X2_Dual_Core_P540, Turion_II_X2_Dual_Core_P560, Turion_X2_Dual_Core_RM_75, Turion_X2_Ultra_Dual_Core_ZM_85, tx3922, ultrasparc_i, ultrasparc_ii, ultrasparc_iie, ultrasparc_iii, ultrasparc_iii_cu, ultrasparc_iiii, ultrasparc_iii_plus, ultrasparc_iis, ultrasparc_iv, ultrasparc_iv_plus, ultrasparc_s400, ultrasparc_t1, unknown, v25, v30, v30mx, via_cyrix_c3, vr4111, vr4121, vr4122, vr4131, vr4181, vr4300, V_Series_Single_Core_V105, V_Series_Single_Core_V120, V_Series_Single_Core_V140, winchip_2, winchip_c6, Xeon, Xeon_3000, Xeon_3530, Xeon_5000, Xeon_5400, Xeon_E5504, Xeon_E5506, Xeon_E5520, Xeon_E5530, Xeon_W3503, Xeon_W5580, Xeon_X5560, xscale, xscale_pxa260, xscale_pxa261, xscale_pxa262, xscale_pxa270, xscale_pxa272, xscale_pxa901, [System.Xml.Serialization.XmlEnumAttribute("")] Item, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class PersonalComputerGraphicsCard { private MemorySizeDimension graphicsCardRamSizeField; private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string GraphicsCardDescription { get; set; } public GraphicsCardInterfaceTypeValues GraphicsCardInterface { get; set; } public PersonalComputerGraphicsCard() { this.graphicsCardRamSizeField = new MemorySizeDimension(); } public MemorySizeDimension GraphicsCardRamSize { get { return this.graphicsCardRamSizeField; } set { this.graphicsCardRamSizeField = value; } } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(PersonalComputerGraphicsCard)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("PrinterWirelessType", Namespace = "", IsNullable = false)] public enum PrinterWirelessTypeValues {[System.Xml.Serialization.XmlEnumAttribute("2.4_ghz_radio_frequency")] Item24_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("5.8_ghz_radio_frequency")] Item58_ghz_radio_frequency, [System.Xml.Serialization.XmlEnumAttribute("54g")] Item54g, [System.Xml.Serialization.XmlEnumAttribute("802_11_A")] Item802_11_A, [System.Xml.Serialization.XmlEnumAttribute("802_11_AB")] Item802_11_AB, [System.Xml.Serialization.XmlEnumAttribute("802_11_ABG")] Item802_11_ABG, [System.Xml.Serialization.XmlEnumAttribute("802_11_AG")] Item802_11_AG, [System.Xml.Serialization.XmlEnumAttribute("802_11_B")] Item802_11_B, [System.Xml.Serialization.XmlEnumAttribute("802_11_BGN")] Item802_11_BGN, [System.Xml.Serialization.XmlEnumAttribute("802_11_G")] Item802_11_G, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_108Mbps")] Item802_11_G_108Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_G_54Mbps")] Item802_11_G_54Mbps, [System.Xml.Serialization.XmlEnumAttribute("802_11_N")] Item802_11_N, [System.Xml.Serialization.XmlEnumAttribute("900_mhz_radio_frequency")] Item900_mhz_radio_frequency, bluetooth, dect, [System.Xml.Serialization.XmlEnumAttribute("dect_6.0")] dect_60, infrared, irda, radio_frequency, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("PrintingMediaType", Namespace = "", IsNullable = false)] public enum PrintingMediaTypeValues { back_print_film, banner_paper, card_stock, envelopes, fabric, glossy_film, glossy_photo_paper, high_resolution_paper, labels, paper_plain, transparencies, unknown, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("SoundCardInterface", Namespace = "", IsNullable = false)] public enum SoundCardInterfaceTypeValues { express_card, firewire_1600, firewire_3200, firewire_400, firewire_800, firewire_esata, pci, pci_x_1, pci_x_16, pci_x_4, pci_x_8, pcmcia, [System.Xml.Serialization.XmlEnumAttribute("usb1.0")] usb10, [System.Xml.Serialization.XmlEnumAttribute("usb1.1")] usb11, [System.Xml.Serialization.XmlEnumAttribute("usb2.0")] usb20, [System.Xml.Serialization.XmlEnumAttribute("usb3.0")] usb30, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class TabletComputerGraphicsCard { private MemorySizeDimension graphicsRAMSizeField; private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string GraphicsDescription { get; set; } public GraphicsCardInterfaceTypeValues GraphicsCardInterface { get; set; } public TabletComputerGraphicsCard() { this.graphicsRAMSizeField = new MemorySizeDimension(); } public MemorySizeDimension GraphicsRAMSize { get { return this.graphicsRAMSizeField; } set { this.graphicsRAMSizeField = value; } } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(TabletComputerGraphicsCard)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum MemoryInterfaceUnitOfMeasure { bits, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlRootAttribute("InputVideoConnectors", Namespace = "", IsNullable = false)] public enum InputVideoConnectorsTypeValues { component_video, composite_video, dvi_x_1, dvi_x_2, dvi_x_4, d_sub, hdmi, mini_hdmi, s_video, vga, }

}

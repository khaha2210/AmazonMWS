// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>AmazonMWSTester.Amazon</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>True</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace AmazonMWSTester.Amazon {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Computers {
        
        private ComputersProductType productTypeField;
        
        private Battery batteryField;
        
        private decimal batteryAverageLifeField;
        
        private bool batteryAverageLifeFieldSpecified;
        
        private decimal batteryAverageLifeStandbyField;
        
        private bool batteryAverageLifeStandbyFieldSpecified;
        
        private decimal batteryChargeTimeField;
        
        private bool batteryChargeTimeFieldSpecified;
        
        private string colorField;
        
        private string colorMapField;
        
        private string countryOfOriginField;
        
        private LengthDimension displayLengthField;
        
        private VolumeDimension displayVolumeField;
        
        private WeightDimension displayWeightField;
        
        private string itemPackageQuantityField;
        
        private string lithiumBatteryEnergyContentField;
        
        private bool lithiumBatteryPackagingFieldSpecified;
        
        private string lithiumBatteryVoltageField;
        
        private string lithiumBatteryWeightField;
        
        private string manufacturerWarrantyTypeField;
        
        private string mfrWarrantyDescriptionLaborField;
        
        private string mfrWarrantyDescriptionPartsField;
        
        private string numberOfLithiumIonCellsField;
        
        private string numberOfLithiumMetalCellsField;
        
        private string powerSourceField;
        
        private string sizeField;
        
        private string sellerWarrantyDescriptionField;
        
        private string warningsField;
        
    public ComputersProductType ProductType {get; set;}

    public Battery Battery {get; set;}

    public decimal BatteryAverageLife {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BatteryAverageLifeSpecified {get; set;}

    public decimal BatteryAverageLifeStandby {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BatteryAverageLifeStandbySpecified {get; set;}

    public decimal BatteryChargeTime {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BatteryChargeTimeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Color {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ColorMap {get; set;}

    public string CountryOfOrigin {get; set;}

    public LengthDimension DisplayLength {get; set;}

    public VolumeDimension DisplayVolume {get; set;}

    public WeightDimension DisplayWeight {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ItemPackageQuantity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string LithiumBatteryEnergyContent {get; set;}

    public ComputersLithiumBatteryPackaging LithiumBatteryPackaging {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LithiumBatteryPackagingSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string LithiumBatteryVoltage {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string LithiumBatteryWeight {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ManufacturerWarrantyType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MfrWarrantyDescriptionLabor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MfrWarrantyDescriptionParts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfLithiumIonCells {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfLithiumMetalCells {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PowerSource {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Size {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SellerWarrantyDescription {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Warnings {get; set;}

        
        public Computers() {
            this.displayVolumeField = new VolumeDimension();
            this.productTypeField = new ComputersProductType();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class CarryingCaseOrBag {
        
        private VariationData variationDataField;
        
        private string checkpointTSAFriendlyField;
        
        private decimal compatibleDeviceSizeField;
        
        private bool compatibleDeviceSizeFieldSpecified;
        
        private List<string> compatibleDeviceFormFactorField;
        
        private string handOrientationField;
        
        private string holderCapacityField;
        
        private string materialTypeField;
        
        private string modelNumberField;
        
    public VariationData VariationData {get; set;}

    public string CheckpointTSAFriendly {get; set;}

    public decimal CompatibleDeviceSize {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CompatibleDeviceSizeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HandOrientation {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HolderCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaterialType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

        
        public CarryingCaseOrBag() {
            this.compatibleDeviceFormFactorField = new List<string>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CompatibleDeviceFormFactor")]
        public List<string> CompatibleDeviceFormFactor {
            get {
                return this.compatibleDeviceFormFactorField;
            }
            set {
                this.compatibleDeviceFormFactorField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class VariationData {
        
        private string variationThemeField;
        
    public VariationDataParentage Parentage {get; set;}

    public string VariationTheme {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Computer {
        
        private VariationData variationDataField;
        
        private LengthSevenDigitDimension cableLengthField;
        
        private List<ConnectionTypeValues> connectionInterfaceField;
        
        private string connectorNumberField;
        
        private string modelNumberField;
        
        private string numberOfUSBHubConnectorPortsField;
        
        private PressureLevelSixDigitIntegerDimension pressureLevelsField;
        
        private TabletDataRateDimension tabletMaximumDataRateField;
        
        private string tabletMinimumSystemRequirementsField;
        
        private TabletResolutionDimension tabletResolutionField;
        
        private TabletActiveSurfaceAreaDimension tabletSurfaceActiveAreaField;
        
        private MemorySizeTenDigitIntegerDimension tVTunerMemoryField;
        
        private List<string> tVTunerVideoOutputInterfaceField;
        
        private string tVTunerVideoStandardField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    public LengthSevenDigitDimension CableLength {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ConnectorNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfUSBHubConnectorPorts {get; set;}

    public PressureLevelSixDigitIntegerDimension PressureLevels {get; set;}

    public TabletDataRateDimension TabletMaximumDataRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string TabletMinimumSystemRequirements {get; set;}

    public TabletResolutionDimension TabletResolution {get; set;}

    public TabletActiveSurfaceAreaDimension TabletSurfaceActiveArea {get; set;}

    public MemorySizeTenDigitIntegerDimension TVTunerMemory {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string TVTunerVideoStandard {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public Computer() {
            this.tVTunerVideoOutputInterfaceField = new List<string>();
            this.tVTunerMemoryField = new MemorySizeTenDigitIntegerDimension();
            this.tabletSurfaceActiveAreaField = new TabletActiveSurfaceAreaDimension();
            this.tabletResolutionField = new TabletResolutionDimension();
            this.tabletMaximumDataRateField = new TabletDataRateDimension();
            this.pressureLevelsField = new PressureLevelSixDigitIntegerDimension();
            this.connectionInterfaceField = new List<ConnectionTypeValues>();
            this.cableLengthField = new LengthSevenDigitDimension();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ConnectionInterface")]
        public List<ConnectionTypeValues> ConnectionInterface {
            get {
                return this.connectionInterfaceField;
            }
            set {
                this.connectionInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TVTunerVideoOutputInterface")]
        public List<string> TVTunerVideoOutputInterface {
            get {
                return this.tVTunerVideoOutputInterfaceField;
            }
            set {
                this.tVTunerVideoOutputInterfaceField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CableLength", Namespace="", IsNullable=false)]
    public partial class LengthSevenDigitDimension {
        
        private LengthUnitOfMeasure unitOfMeasureField;
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LengthUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PressureLevels", Namespace="", IsNullable=false)]
    public partial class PressureLevelSixDigitIntegerDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PressureLevelUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TabletMaximumDataRate", Namespace="", IsNullable=false)]
    public partial class TabletDataRateDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TabletDataRateUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TabletResolution", Namespace="", IsNullable=false)]
    public partial class TabletResolutionDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TabletResolutionUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TabletSurfaceActiveArea", Namespace="", IsNullable=false)]
    public partial class TabletActiveSurfaceAreaDimension {
        
        private LengthUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LengthUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TVTunerMemory", Namespace="", IsNullable=false)]
    public partial class MemorySizeTenDigitIntegerDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public MemorySizeUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerAddOn {
        
        private VariationData variationDataField;
        
        private CurrentFiveDigitDimension aCAdapterCurrentField;
        
        private LengthSevenDigitDimension cableLengthField;
        
        private DataTransferSpeedDimension cableSpeedField;
        
        private string cableTypeField;
        
        private string compatibleDevicesField;
        
        private decimal compatibleDeviceSizeField;
        
        private bool compatibleDeviceSizeFieldSpecified;
        
        private string conductorField;
        
        private ConnectionTypeValues connectionTypeField;
        
        private bool connectionTypeFieldSpecified;
        
        private string connectorNumberField;
        
        private string maximumHorizontalVideoResolutionField;
        
        private string maximumVerticalVideoResolutionField;
        
        private string modelNumberField;
        
        private string numberOfFansField;
        
        private string numberOfMonitorConnectionsField;
        
        private string privacyScreenMaterialTypeField;
        
        private string privacyScreenSizeField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    public CurrentFiveDigitDimension ACAdapterCurrent {get; set;}

    public LengthSevenDigitDimension CableLength {get; set;}

    public DataTransferSpeedDimension CableSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CableType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CompatibleDevices {get; set;}

    public decimal CompatibleDeviceSize {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CompatibleDeviceSizeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Conductor {get; set;}

    public ConnectionTypeValues ConnectionType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ConnectionTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ConnectorNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MaximumHorizontalVideoResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MaximumVerticalVideoResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfFans {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfMonitorConnections {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrivacyScreenMaterialType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string PrivacyScreenSize {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public ComputerAddOn() {
            this.cableSpeedField = new DataTransferSpeedDimension();
            this.cableLengthField = new LengthSevenDigitDimension();
            this.aCAdapterCurrentField = new CurrentFiveDigitDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ACAdapterCurrent", Namespace="", IsNullable=false)]
    public partial class CurrentFiveDigitDimension {
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public CurrentUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CableSpeed", Namespace="", IsNullable=false)]
    public partial class DataTransferSpeedDimension {
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DataTransferSpeedUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerComponent {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string audioOutputModeField;
        
        private string chipsetTypeField;
        
        private ComputerComponentComponentMemoryStorageCapacity componentMemoryStorageCapacityField;
        
        private List<string> compatibleProcessorTypesField;
        
        private List<ComponentWirelessTypeValues> componentWirelessTypeField;
        
        private string communicationInterfaceField;
        
        private string componentWriteSpeedField;
        
        private string connectorTypeField;
        
        private string digitalAudioCapacityField;
        
        private bool digitalMediaFormatFieldSpecified;
        
        private string effectiveInputAreaField;
        
        private string formFactorField;
        
        private string handOrientationField;
        
        private bool hasAutoFocusField;
        
        private bool hasAutoFocusFieldSpecified;
        
        private bool hasProgrammableButtonsField;
        
        private bool hasProgrammableButtonsFieldSpecified;
        
        private string holderCapacityField;
        
        private string inputTypeField;
        
        private bool isAmplifierIntegratedField;
        
        private bool isAmplifierIntegratedFieldSpecified;
        
        private string keyboardDescriptionField;
        
        private string materialTypeField;
        
        private LengthIntegerDimension maxOperatingDistanceField;
        
        private LengthIntegerDimension maximumOperatingDistanceField;
        
        private string memorySlotsAvailableField;
        
        private MemorySizeIntegerDimension memoryStorageCapacityField;
        
        private string modelNumberField;
        
        private string movementDetectionTechnologyField;
        
        private string numberOfPortsField;
        
        private string outputWattageField;
        
        private TimeIntegerDimension recordingCapacityField;
        
        private string scannerResolutionField;
        
        private LengthDimension speakerDiameterField;
        
        private string speakersMaxOutputPowerField;
        
        private string speakersNominalOutputPowerField;
        
        private string speakerOutputChannelQuantityField;
        
        private string speakerSurroundSoundChannelConfigurationField;
        
        private string speedRatingField;
        
        private string voltageField;
        
        private string wattageField;
        
        private string writeSpeedField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AudioOutputMode {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ChipsetType {get; set;}

    public ComputerComponentComponentMemoryStorageCapacity ComponentMemoryStorageCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CommunicationInterface {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ComponentWriteSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ConnectorType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DigitalAudioCapacity {get; set;}

    public DigitalMediaFormatTypeValues DigitalMediaFormat {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DigitalMediaFormatSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string EffectiveInputArea {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string FormFactor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HandOrientation {get; set;}

    public bool HasAutoFocus {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasAutoFocusSpecified {get; set;}

    public bool HasProgrammableButtons {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasProgrammableButtonsSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HolderCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string InputType {get; set;}

    public bool IsAmplifierIntegrated {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsAmplifierIntegratedSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string KeyboardDescription {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaterialType {get; set;}

    public LengthIntegerDimension MaxOperatingDistance {get; set;}

    public LengthIntegerDimension MaximumOperatingDistance {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MemorySlotsAvailable {get; set;}

    public MemorySizeIntegerDimension MemoryStorageCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MovementDetectionTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string OutputWattage {get; set;}

    public TimeIntegerDimension RecordingCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ScannerResolution {get; set;}

    public LengthDimension SpeakerDiameter {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string SpeakersMaxOutputPower {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string SpeakersNominalOutputPower {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string SpeakerOutputChannelQuantity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SpeakerSurroundSoundChannelConfiguration {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SpeedRating {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Voltage {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string WriteSpeed {get; set;}

        
        public ComputerComponent() {
            this.recordingCapacityField = new TimeIntegerDimension();
            this.memoryStorageCapacityField = new MemorySizeIntegerDimension();
            this.maximumOperatingDistanceField = new LengthIntegerDimension();
            this.maxOperatingDistanceField = new LengthIntegerDimension();
            this.componentWirelessTypeField = new List<ComponentWirelessTypeValues>();
            this.compatibleProcessorTypesField = new List<string>();
            this.componentMemoryStorageCapacityField = new ComputerComponentComponentMemoryStorageCapacity();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CompatibleProcessorTypes", DataType="normalizedString")]
        public List<string> CompatibleProcessorTypes {
            get {
                return this.compatibleProcessorTypesField;
            }
            set {
                this.compatibleProcessorTypesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ComponentWirelessType")]
        public List<ComponentWirelessTypeValues> ComponentWirelessType {
            get {
                return this.componentWirelessTypeField;
            }
            set {
                this.componentWirelessTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerCoolingDevice {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string coolingTypeField;
        
        private List<string> cPUSocketCompatabilityField;
        
        private string fanIncludedField;
        
        private string fanLEDField;
        
        private AirflowDimension fanMaximumAirflowField;
        
        private NoiseLevelSixDigitDimension fanMaximumNoiseLevelField;
        
        private SpeedSixDigitDimension fanMaximumSpeedField;
        
        private string fanPowerConnectorField;
        
        private string heatsinkMaterialField;
        
        private LengthFiveDigitDimension largestFanSizeField;
        
        private string modelNumberField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public string CoolingType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string FanIncluded {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string FanLED {get; set;}

    public AirflowDimension FanMaximumAirflow {get; set;}

    public NoiseLevelSixDigitDimension FanMaximumNoiseLevel {get; set;}

    public SpeedSixDigitDimension FanMaximumSpeed {get; set;}

    public string FanPowerConnector {get; set;}

    public string HeatsinkMaterial {get; set;}

    public LengthFiveDigitDimension LargestFanSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

        
        public ComputerCoolingDevice() {
            this.largestFanSizeField = new LengthFiveDigitDimension();
            this.fanMaximumSpeedField = new SpeedSixDigitDimension();
            this.fanMaximumNoiseLevelField = new NoiseLevelSixDigitDimension();
            this.fanMaximumAirflowField = new AirflowDimension();
            this.cPUSocketCompatabilityField = new List<string>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CPUSocketCompatability")]
        public List<string> CPUSocketCompatability {
            get {
                return this.cPUSocketCompatabilityField;
            }
            set {
                this.cPUSocketCompatabilityField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("FanMaximumAirflow", Namespace="", IsNullable=false)]
    public partial class AirflowDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public AirflowUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("FanMaximumNoiseLevel", Namespace="", IsNullable=false)]
    public partial class NoiseLevelSixDigitDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public NoiseLevelUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("FanMaximumSpeed", Namespace="", IsNullable=false)]
    public partial class SpeedSixDigitDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public SpeedUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("LargestFanSize", Namespace="", IsNullable=false)]
    public partial class LengthFiveDigitDimension {
        
        private LengthUnitOfMeasure unitOfMeasureField;
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LengthUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerDriveOrStorage {
        
        private VariationData variationDataField;
        
        private bool aCAdapterIncludedField;
        
        private bool aCAdapterIncludedFieldSpecified;
        
        private bool automaticBackupSoftwareIncludedField;
        
        private bool automaticBackupSoftwareIncludedFieldSpecified;
        
        private string averagelatencyField;
        
        private string averageseektimeField;
        
        private string averagewritetimeField;
        
        private MemorySizeIntegerDimension bufferSizeField;
        
        private List<string> cableInterfaceField;
        
        private MemorySizeIntegerDimension cacheSizeField;
        
        private string dataTransferRateField;
        
        private bool dockingStationExternalInterfaceFieldSpecified;
        
        private MemorySizeIntegerDimension driveMemoryStorageCapacityField;
        
        private string driveRPMField;
        
        private List<MemorySizeDimension> hardDriveSizeField;
        
        private string includedHarddrivedescriptionField;
        
        private bool interfaceTypeFieldSpecified;
        
        private List<InternalConnectorTypeValues> internalConnectorField;
        
        private MemorySizeIntegerDimension memoryStorageCapacityField;
        
        private string modelNumberField;
        
        private List<DataTransferSpeedIntegerDimension> nASNetworkInterfaceField;
        
        private string numberOfexternalBaysField;
        
        private string numberOfHardDrivesField;
        
        private string numberOfInternalBaysField;
        
        private string opticalDriveTypeField;
        
        private List<decimal> physicalHardDriveFormFactorField;
        
        private string platformCompatabilityField;
        
        private string rAIDField;
        
        private string sSDConnectorPinsField;
        
        private string sSDDriveArchitechtureField;
        
        private string storageMaterialTypeField;
        
        private string storageReadSpeedField;
        
        private string storageWriteSpeedField;
        
        private string totalFirewire1600ConnectorsField;
        
        private string totalFirewire3200ConnectorsField;
        
        private string totalFirewire400ConnectorsField;
        
        private string totalFirewire800ConnectorsField;
        
        private string totalSataConnectorsField;
        
        private string totalUSB10ConnectorsField;
        
        private string totalUSB11ConnectorsField;
        
        private string totalUSB20ConnectorsField;
        
        private string totalUSB30ConnectorsField;
        
    public VariationData VariationData {get; set;}

    public bool ACAdapterIncluded {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ACAdapterIncludedSpecified {get; set;}

    public bool AutomaticBackupSoftwareIncluded {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutomaticBackupSoftwareIncludedSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Averagelatency {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Averageseektime {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Averagewritetime {get; set;}

    public MemorySizeIntegerDimension BufferSize {get; set;}

    public MemorySizeIntegerDimension CacheSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string DataTransferRate {get; set;}

    public DockingStationExternalInterfaceTypeValues DockingStationExternalInterface {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DockingStationExternalInterfaceSpecified {get; set;}

    public MemorySizeIntegerDimension DriveMemoryStorageCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string DriveRPM {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string IncludedHarddrivedescription {get; set;}

    public InterfaceTypeValues InterfaceType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool InterfaceTypeSpecified {get; set;}

    public MemorySizeIntegerDimension MemoryStorageCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfexternalBays {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfHardDrives {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfInternalBays {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalDriveType {get; set;}

    public string PlatformCompatability {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAID {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string SSDConnectorPins {get; set;}

    public string SSDDriveArchitechture {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string StorageMaterialType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string StorageReadSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string StorageWriteSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFirewire1600Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFirewire3200Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFirewire400Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFirewire800Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalSataConnectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalUSB1.0Connectors",DataType="positiveInteger")]
    public string TotalUSB10Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalUSB1.1Connectors",DataType="positiveInteger")]
    public string TotalUSB11Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalUSB2.0Connectors",DataType="positiveInteger")]
    public string TotalUSB20Connectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalUSB3.0Connectors",DataType="positiveInteger")]
    public string TotalUSB30Connectors {get; set;}

        
        public ComputerDriveOrStorage() {
            this.physicalHardDriveFormFactorField = new List<decimal>();
            this.nASNetworkInterfaceField = new List<DataTransferSpeedIntegerDimension>();
            this.internalConnectorField = new List<InternalConnectorTypeValues>();
            this.hardDriveSizeField = new List<MemorySizeDimension>();
            this.cableInterfaceField = new List<string>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CableInterface")]
        public List<string> CableInterface {
            get {
                return this.cableInterfaceField;
            }
            set {
                this.cableInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveSize")]
        public List<MemorySizeDimension> HardDriveSize {
            get {
                return this.hardDriveSizeField;
            }
            set {
                this.hardDriveSizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InternalConnector")]
        public List<InternalConnectorTypeValues> InternalConnector {
            get {
                return this.internalConnectorField;
            }
            set {
                this.internalConnectorField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("NASNetworkInterface")]
        public List<DataTransferSpeedIntegerDimension> NASNetworkInterface {
            get {
                return this.nASNetworkInterfaceField;
            }
            set {
                this.nASNetworkInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PhysicalHardDriveFormFactor")]
        public List<decimal> PhysicalHardDriveFormFactor {
            get {
                return this.physicalHardDriveFormFactorField;
            }
            set {
                this.physicalHardDriveFormFactorField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("NASNetworkInterface", Namespace="", IsNullable=false)]
    public partial class DataTransferSpeedIntegerDimension {
        
        private DataTransferSpeedUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DataTransferSpeedUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerInputDevice {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string builtInMicrophoneField;
        
        private string deviceHardwareCompatabilityField;
        
        private string deviceSoftwareCompatabilityField;
        
        private string headphoneStyleField;
        
        private string inputDeviceDesignStyleField;
        
        private bool inputDeviceInterfaceTechnologyFieldSpecified;
        
        private string modelNumberField;
        
        private string noiseCancelingField;
        
        private string numberOfButtonsField;
        
        private string presentationRemoteLaserColorField;
        
        private MemorySizeFiveDigitDimension presentationRemoteMemoryField;
        
        private LengthFiveDigitDimension presentationRemoteOperatingDistanceField;
        
        private string primaryHeadphoneUseField;
        
        private string trackingMethodField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string BuiltInMicrophone {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DeviceHardwareCompatability {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DeviceSoftwareCompatability {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HeadphoneStyle {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string InputDeviceDesignStyle {get; set;}

    public InputDeviceInterfaceTechnologyTypeValues InputDeviceInterfaceTechnology {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool InputDeviceInterfaceTechnologySpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public string NoiseCanceling {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfButtons {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PresentationRemoteLaserColor {get; set;}

    public MemorySizeFiveDigitDimension PresentationRemoteMemory {get; set;}

    public LengthFiveDigitDimension PresentationRemoteOperatingDistance {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrimaryHeadphoneUse {get; set;}

    public string TrackingMethod {get; set;}

        
        public ComputerInputDevice() {
            this.presentationRemoteOperatingDistanceField = new LengthFiveDigitDimension();
            this.presentationRemoteMemoryField = new MemorySizeFiveDigitDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PresentationRemoteMemory", Namespace="", IsNullable=false)]
    public partial class MemorySizeFiveDigitDimension {
        
        private MemorySizeUnitOfMeasure unitOfMeasureField;
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public MemorySizeUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerProcessor {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private MemorySizeIntegerDimension cacheMemoryField;
        
        private string modelNumberField;
        
        private string processorBrandField;
        
        private string processorCoolingDeviceField;
        
        private string processorCountField;
        
        private bool processorSeriesFieldSpecified;
        
        private string processorSocketField;
        
        private FrequencyDimension processorSpeedField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public MemorySizeIntegerDimension CacheMemory {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public string ProcessorBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorCoolingDevice {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ProcessorCount {get; set;}

    public ProcessorSeriesTypeValues ProcessorSeries {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ProcessorSeriesSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorSocket {get; set;}

    public FrequencyDimension ProcessorSpeed {get; set;}

        
        public ComputerProcessor() {
            this.processorSpeedField = new FrequencyDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class ComputerSpeaker {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string audioOutputModeField;
        
        private string communicationInterfaceField;
        
        private string digitalAudioCapacityField;
        
        private string frequencyRangeField;
        
        private bool inputTypeFieldSpecified;
        
        private LengthIntegerDimension maximumOperatingDistanceField;
        
        private string memorySlotsAvailableField;
        
        private string modelNumberField;
        
        private bool movementDetectionTechnologyField;
        
        private bool movementDetectionTechnologyFieldSpecified;
        
        private decimal numberOfSatelliteSpeakersField;
        
        private bool numberOfSatelliteSpeakersFieldSpecified;
        
        private string outputWattageField;
        
        private TimeIntegerDimension recordingCapacityField;
        
        private string remoteIncludedField;
        
        private LengthDimension speakerDiameterField;
        
        private string speakerOutputChannelQuantityField;
        
        private WattageDimension speakersMaximumOutputPowerField;
        
        private WattageDimension speakersNominalOutputPowerField;
        
        private string speakerSurroundSoundChannelConfigurationField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AudioOutputMode {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CommunicationInterface {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DigitalAudioCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string FrequencyRange {get; set;}

    public InputTypeValues InputType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool InputTypeSpecified {get; set;}

    public LengthIntegerDimension MaximumOperatingDistance {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MemorySlotsAvailable {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public bool MovementDetectionTechnology {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MovementDetectionTechnologySpecified {get; set;}

    public decimal NumberOfSatelliteSpeakers {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NumberOfSatelliteSpeakersSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string OutputWattage {get; set;}

    public TimeIntegerDimension RecordingCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RemoteIncluded {get; set;}

    public LengthDimension SpeakerDiameter {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string SpeakerOutputChannelQuantity {get; set;}

    public WattageDimension SpeakersMaximumOutputPower {get; set;}

    public WattageDimension SpeakersNominalOutputPower {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SpeakerSurroundSoundChannelConfiguration {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public ComputerSpeaker() {
            this.speakersNominalOutputPowerField = new WattageDimension();
            this.speakersMaximumOutputPowerField = new WattageDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class FlashMemory {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string audioOutputModeField;
        
        private string communicationInterfaceField;
        
        private string digitalAudioCapacityField;
        
        private bool memoryCardTypeFieldSpecified;
        
        private string modelNumberField;
        
        private bool movementDetectionTechnologyField;
        
        private bool movementDetectionTechnologyFieldSpecified;
        
        private TimeIntegerDimension recordingCapacityField;
        
        private bool speedClassRatingFieldSpecified;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private bool wirelessStandardFieldSpecified;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AudioOutputMode {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CommunicationInterface {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DigitalAudioCapacity {get; set;}

    public MemoryCardTypeValues MemoryCardType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MemoryCardTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public bool MovementDetectionTechnology {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MovementDetectionTechnologySpecified {get; set;}

    public TimeIntegerDimension RecordingCapacity {get; set;}

    public SpeedClassRatingTypeValues SpeedClassRating {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SpeedClassRatingSpecified {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

    public WirelessStandardTypeValues WirelessStandard {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WirelessStandardSpecified {get; set;}

        
        public FlashMemory() {
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class InkOrToner {
        
        private VariationData variationDataField;
        
        private List<string> inkColorField;
        
        private string inkOrTonerCompatibleDevicesField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string InkOrTonerCompatibleDevices {get; set;}

        
        public InkOrToner() {
            this.inkColorField = new List<string>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InkColor", DataType="normalizedString")]
        public List<string> InkColor {
            get {
                return this.inkColorField;
            }
            set {
                this.inkColorField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Keyboards {
        
        private VariationData variationDataField;
        
        private string handOrientationField;
        
        private string inputDeviceDesignStyleField;
        
        private string keyboardDescriptionField;
        
        private string modelNumberField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private bool wirelessInputDeviceProtocolFieldSpecified;
        
        private bool wirelessInputDeviceTechnologyFieldSpecified;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HandOrientation {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string InputDeviceDesignStyle {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string KeyboardDescription {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

    public WirelessInputDeviceProtocolTypeValues WirelessInputDeviceProtocol {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WirelessInputDeviceProtocolSpecified {get; set;}

    public WirelessInputDeviceTechnologyTypeValues WirelessInputDeviceTechnology {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WirelessInputDeviceTechnologySpecified {get; set;}

        
        public Keyboards() {
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class MemoryReader {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string audioOutputModeField;
        
        private bool cardReaderInterfaceFieldSpecified;
        
        private string communicationInterfaceField;
        
        private List<CompatibleMemoryCardTypeValues> compatibleMemoryCardField;
        
        private string digitalAudioCapacityField;
        
        private string modelNumberField;
        
        private bool movementDetectionTechnologyField;
        
        private bool movementDetectionTechnologyFieldSpecified;
        
        private DataTransferSpeedIntegerDimension readSpeedField;
        
        private TimeIntegerDimension recordingCapacityField;
        
        private SpeedClassRatingTypeValues speedClassRatingField;
        
        private bool speedClassRatingFieldSpecified;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private WirelessStandardTypeValues wirelessStandardField;
        
        private bool wirelessStandardFieldSpecified;
        
        private DataTransferSpeedTenIntegerDimension writeSpeedField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AudioOutputMode {get; set;}

    public CardReaderInterfaceTypeValues CardReaderInterface {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CardReaderInterfaceSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CommunicationInterface {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DigitalAudioCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public bool MovementDetectionTechnology {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MovementDetectionTechnologySpecified {get; set;}

    public DataTransferSpeedIntegerDimension ReadSpeed {get; set;}

    public TimeIntegerDimension RecordingCapacity {get; set;}

    public SpeedClassRatingTypeValues SpeedClassRating {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SpeedClassRatingSpecified {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

    public WirelessStandardTypeValues WirelessStandard {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WirelessStandardSpecified {get; set;}

    public DataTransferSpeedTenIntegerDimension WriteSpeed {get; set;}

        
        public MemoryReader() {
            this.writeSpeedField = new DataTransferSpeedTenIntegerDimension();
            this.readSpeedField = new DataTransferSpeedIntegerDimension();
            this.compatibleMemoryCardField = new List<CompatibleMemoryCardTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CompatibleMemoryCard")]
        public List<CompatibleMemoryCardTypeValues> CompatibleMemoryCard {
            get {
                return this.compatibleMemoryCardField;
            }
            set {
                this.compatibleMemoryCardField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("WriteSpeed", Namespace="", IsNullable=false)]
    public partial class DataTransferSpeedTenIntegerDimension {
        
        private DataTransferSpeedUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DataTransferSpeedUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Monitor {
        
        private VariationData variationDataField;
        
        private string builtinSpeakerField;
        
        private string contrastRatioField;
        
        private string displayResolutionMaximumField;
        
        private string displayTechnologyField;
        
        private bool hasColorScreenField;
        
        private bool hasColorScreenFieldSpecified;
        
        private string modelNumberField;
        
        private string monitorTunerTechnologyField;
        
        private LuminanceFiveDigitDimension monitorBrightnessField;
        
        private List<MonitorConnectorsTypeValues> monitorConnectorsField;
        
        private string responseTimeField;
        
        private string screenResolutionField;
        
        private LengthDimension screenSizeField;
        
        private string tunerTechnologyField;
        
        private string viewingAngleField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string BuiltinSpeaker {get; set;}

    public string ContrastRatio {get; set;}

    public string DisplayResolutionMaximum {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DisplayTechnology {get; set;}

    public bool HasColorScreen {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasColorScreenSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MonitorTunerTechnology {get; set;}

    public LuminanceFiveDigitDimension MonitorBrightness {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ResponseTime {get; set;}

    public string ScreenResolution {get; set;}

    public LengthDimension ScreenSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string TunerTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ViewingAngle {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public Monitor() {
            this.monitorConnectorsField = new List<MonitorConnectorsTypeValues>();
            this.monitorBrightnessField = new LuminanceFiveDigitDimension();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("MonitorConnectors")]
        public List<MonitorConnectorsTypeValues> MonitorConnectors {
            get {
                return this.monitorConnectorsField;
            }
            set {
                this.monitorConnectorsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("MonitorBrightness", Namespace="", IsNullable=false)]
    public partial class LuminanceFiveDigitDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LuminanceUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Motherboard {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string cPUSocketTypeField;
        
        private string frontSideBusSpeedField;
        
        private List<GraphicsCardInterfaceTypeValues> graphicsCardInterfaceField;
        
        private string hDMIPortsField;
        
        private string integratedAudioChannelsField;
        
        private bool maxEthernetSpeedFieldSpecified;
        
        private MemorySizeIntegerDimension maxMemorySupportedField;
        
        private string memoryStandardField;
        
        private string modelNumberField;
        
        private string motherboardFormFactorField;
        
        private string multiGPUTechnologyField;
        
        private string northbridgeField;
        
        private string numberOfeSATAPortsField;
        
        private string numberOfEthernetPortsField;
        
        private string numberOfFireWire400PortsField;
        
        private string numberOfFireWire800PortsField;
        
        private string numberOfIDEPortsField;
        
        private string numberOfMemorySlotsField;
        
        private string numberOfPCIExpressSlotsField;
        
        private string numberOfSATAPortsField;
        
        private string numberOfUSBPortsField;
        
        private string onboardVideoField;
        
        private string sATARAIDField;
        
        private List<string> sATAStandardsSupportedField;
        
        private string southbridgeField;
        
        private string sPDIFOutputField;
        
        private string typeOfMemorySlotField;
        
        private string uSBPortTypeField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public string CPUSocketType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string FrontSideBusSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string HDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string IntegratedAudioChannels {get; set;}

    public MaxEthernetSpeedTypeValues MaxEthernetSpeed {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxEthernetSpeedSpecified {get; set;}

    public MemorySizeIntegerDimension MaxMemorySupported {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MemoryStandard {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public string MotherboardFormFactor {get; set;}

    public string MultiGPUTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Northbridge {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfeSATAPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfEthernetPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfFireWire400Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfFireWire800Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfIDEPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfMemorySlots {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfPCIExpressSlots {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfSATAPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfUSBPorts {get; set;}

    public string OnboardVideo {get; set;}

    public string SATARAID {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Southbridge {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SPDIFOutput {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TypeOfMemorySlot {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string USBPortType {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public Motherboard() {
            this.sATAStandardsSupportedField = new List<string>();
            this.graphicsCardInterfaceField = new List<GraphicsCardInterfaceTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GraphicsCardInterface")]
        public List<GraphicsCardInterfaceTypeValues> GraphicsCardInterface {
            get {
                return this.graphicsCardInterfaceField;
            }
            set {
                this.graphicsCardInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("SATAStandardsSupported")]
        public List<string> SATAStandardsSupported {
            get {
                return this.sATAStandardsSupportedField;
            }
            set {
                this.sATAStandardsSupportedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class NetworkingDevice {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private List<string> additionalFunctionalityField;
        
        private bool iPProtocolStandardsFieldSpecified;
        
        private string lANPortBandwidthField;
        
        private string lANPortNumberField;
        
        private DataTransferSpeedFiveDigitIntegerDimension maxDownstreamTransmissionRateField;
        
        private DataTransferSpeedFiveDigitIntegerDimension maxUpstreamTransmissionRateField;
        
        private string modelNumberField;
        
        private bool modemTypeFieldSpecified;
        
        private string networkAdapterTypeField;
        
        private string operatingSystemCompatabilityField;
        
        private string securityProtocolField;
        
        private string simultaneousSessionsField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private DataTransferSpeedFiveDigitIntegerDimension wirelessDataTransferRateField;
        
        private string wirelessRouterTransmissionBandField;
        
        private string wirelessTechnologyField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public IPProtocolStandardsTypeValues IPProtocolStandards {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IPProtocolStandardsSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string LANPortBandwidth {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string LANPortNumber {get; set;}

    public DataTransferSpeedFiveDigitIntegerDimension MaxDownstreamTransmissionRate {get; set;}

    public DataTransferSpeedFiveDigitIntegerDimension MaxUpstreamTransmissionRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public ModemTypeValues ModemType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ModemTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string NetworkAdapterType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OperatingSystemCompatability {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SecurityProtocol {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string SimultaneousSessions {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

    public DataTransferSpeedFiveDigitIntegerDimension WirelessDataTransferRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string WirelessRouterTransmissionBand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string WirelessTechnology {get; set;}

        
        public NetworkingDevice() {
            this.wirelessDataTransferRateField = new DataTransferSpeedFiveDigitIntegerDimension();
            this.maxUpstreamTransmissionRateField = new DataTransferSpeedFiveDigitIntegerDimension();
            this.maxDownstreamTransmissionRateField = new DataTransferSpeedFiveDigitIntegerDimension();
            this.additionalFunctionalityField = new List<string>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AdditionalFunctionality")]
        public List<string> AdditionalFunctionality {
            get {
                return this.additionalFunctionalityField;
            }
            set {
                this.additionalFunctionalityField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("MaxDownstreamTransmissionRate", Namespace="", IsNullable=false)]
    public partial class DataTransferSpeedFiveDigitIntegerDimension {
        
        private DataTransferSpeedUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DataTransferSpeedUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class NotebookComputer {
        
        private VariationData variationDataField;
        
        private List<AdditionalDrivesTypeValues> additionalDrivesField;
        
        private string audioField;
        
        private bool cardReaderFieldSpecified;
        
        private List<ComputerMemoryTypeValues> computerMemoryTypeField;
        
        private string computerTunerTechnologyField;
        
        private List<ComputerWirelessTypeValues> computerWirelessTypeField;
        
        private string displayResolutionMaximumField;
        
        private List<NotebookComputerGraphicsCard> graphicsCardField;
        
        private string graphicsCoProcessorField;
        
        private string connectivityTypeField;
        
        private string graphicsChipsetBrandField;
        
        private bool graphicsRAMTypeFieldSpecified;
        
        private decimal hardDiskRotationalSpeedField;
        
        private bool hardDiskRotationalSpeedFieldSpecified;
        
        private string hardDiskTechnologyField;
        
        private List<HardDriveInterfaceTypeValues> hardDriveInterfaceField;
        
        private List<MemorySizeDimension> hardDriveSizeField;
        
        private string hardwarePlatformField;
        
        private bool hasColorScreenField;
        
        private bool hasColorScreenFieldSpecified;
        
        private MemorySizeDimension maxExpandedMemorySupportedField;
        
        private string modelNumberField;
        
        private string monitorTunerTechnologyField;
        
        private string numberOfAudioOutPortsField;
        
        private string numberOfDMIPortsField;
        
        private string numberOfEthernetPortsField;
        
        private string numberOfFirewirePortsField;
        
        private string numberOfGamingPortsField;
        
        private string numberOfHDMIPortsField;
        
        private string numberOfLPT1PrinterPortsField;
        
        private string numberOfMicrophonePortsField;
        
        private string numberOfPS2PortsField;
        
        private string numberOfSerialPortsField;
        
        private string numberOfUSB20PortsField;
        
        private string numberOfUSB30PortsField;
        
        private string numberOfVGAPortsField;
        
        private string notebookDisplayTechnologyField;
        
        private List<string> operatingSystemField;
        
        private string opticalDeviceTypeField;
        
        private string opticalDriveIntegratedField;
        
        private string opticalStorageDeviceTypeField;
        
        private string processorBrandField;
        
        private string processorCountField;
        
        private string processorSocketField;
        
        private FrequencyDimension processorSpeedField;
        
        private bool processorTypeFieldSpecified;
        
        private MemorySizeDimension rAMSizeField;
        
        private string rAMClockSpeedField;
        
        private string rAMFormFactorField;
        
        private string rAMTechnologyField;
        
        private ResolutionFiveDigitDimension rearWebcamResolutionField;
        
        private string responseTimeField;
        
        private string screenResolutionField;
        
        private LengthDimension screenSizeField;
        
        private string seriesField;
        
        private string softwareIncludedField;
        
        private string speakerField;
        
        private List<TabletInputMethodTypeValues> tabletInputMethodField;
        
        private string tunerTechnologyField;
        
        private string uRackSizeField;
        
        private string viewingAngleField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private List<WirelessCarrierTypeValues> wirelessCarrierField;
        
        private List<WirelessTypeValues> wirelessTypeField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Audio {get; set;}

    public CardReaderTypeValues CardReader {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CardReaderSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ComputerTunerTechnology {get; set;}

    public string DisplayResolutionMaximum {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsCoProcessor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ConnectivityType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsChipsetBrand {get; set;}

    public GraphicsRAMTypeValues GraphicsRAMType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GraphicsRAMTypeSpecified {get; set;}

    public decimal HardDiskRotationalSpeed {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HardDiskRotationalSpeedSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HardDiskTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HardwarePlatform {get; set;}

    public bool HasColorScreen {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasColorScreenSpecified {get; set;}

    public MemorySizeDimension MaxExpandedMemorySupported {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MonitorTunerTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfAudioOutPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfEthernetPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfFirewirePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfGamingPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfHDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfLPT1PrinterPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfMicrophonePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfPS2Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfSerialPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("NumberOfUSB2.0Ports",DataType="positiveInteger")]
    public string NumberOfUSB20Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("NumberOfUSB3.0Ports",DataType="positiveInteger")]
    public string NumberOfUSB30Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfVGAPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string NotebookDisplayTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalDeviceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string OpticalDriveIntegrated {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalStorageDeviceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ProcessorCount {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorSocket {get; set;}

    public FrequencyDimension ProcessorSpeed {get; set;}

    public ProcessorTypeValues ProcessorType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ProcessorTypeSpecified {get; set;}

    public MemorySizeDimension RAMSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string RAMClockSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAMFormFactor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAMTechnology {get; set;}

    public ResolutionFiveDigitDimension RearWebcamResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ResponseTime {get; set;}

    public string ScreenResolution {get; set;}

    public LengthDimension ScreenSize {get; set;}

    public string Series {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SoftwareIncluded {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Speaker {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string TunerTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("U-RackSize",DataType="positiveInteger")]
    public string URackSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ViewingAngle {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public NotebookComputer() {
            this.wirelessTypeField = new List<WirelessTypeValues>();
            this.wirelessCarrierField = new List<WirelessCarrierTypeValues>();
            this.tabletInputMethodField = new List<TabletInputMethodTypeValues>();
            this.rearWebcamResolutionField = new ResolutionFiveDigitDimension();
            this.operatingSystemField = new List<string>();
            this.hardDriveSizeField = new List<MemorySizeDimension>();
            this.hardDriveInterfaceField = new List<HardDriveInterfaceTypeValues>();
            this.graphicsCardField = new List<NotebookComputerGraphicsCard>();
            this.computerWirelessTypeField = new List<ComputerWirelessTypeValues>();
            this.computerMemoryTypeField = new List<ComputerMemoryTypeValues>();
            this.additionalDrivesField = new List<AdditionalDrivesTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AdditionalDrives")]
        public List<AdditionalDrivesTypeValues> AdditionalDrives {
            get {
                return this.additionalDrivesField;
            }
            set {
                this.additionalDrivesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ComputerMemoryType")]
        public List<ComputerMemoryTypeValues> ComputerMemoryType {
            get {
                return this.computerMemoryTypeField;
            }
            set {
                this.computerMemoryTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ComputerWirelessType")]
        public List<ComputerWirelessTypeValues> ComputerWirelessType {
            get {
                return this.computerWirelessTypeField;
            }
            set {
                this.computerWirelessTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GraphicsCard")]
        public List<NotebookComputerGraphicsCard> GraphicsCard {
            get {
                return this.graphicsCardField;
            }
            set {
                this.graphicsCardField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveInterface")]
        public List<HardDriveInterfaceTypeValues> HardDriveInterface {
            get {
                return this.hardDriveInterfaceField;
            }
            set {
                this.hardDriveInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveSize")]
        public List<MemorySizeDimension> HardDriveSize {
            get {
                return this.hardDriveSizeField;
            }
            set {
                this.hardDriveSizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OperatingSystem", DataType="normalizedString")]
        public List<string> OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TabletInputMethod")]
        public List<TabletInputMethodTypeValues> TabletInputMethod {
            get {
                return this.tabletInputMethodField;
            }
            set {
                this.tabletInputMethodField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WirelessCarrier")]
        public List<WirelessCarrierTypeValues> WirelessCarrier {
            get {
                return this.wirelessCarrierField;
            }
            set {
                this.wirelessCarrierField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WirelessType")]
        public List<WirelessTypeValues> WirelessType {
            get {
                return this.wirelessTypeField;
            }
            set {
                this.wirelessTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DigitalStillResolution", Namespace="", IsNullable=false)]
    public partial class ResolutionFiveDigitDimension {
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ResolutionUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class PersonalComputer {
        
        private VariationData variationDataField;
        
        private List<AdditionalDrivesTypeValues> additionalDrivesField;
        
        private string audioField;
        
        private CardReaderTypeValues cardReaderField;
        
        private bool cardReaderFieldSpecified;
        
        private List<ComputerMemoryTypeValues> computerMemoryTypeField;
        
        private string computerTunerTechnologyField;
        
        private List<ComputerWirelessTypeValues> computerWirelessTypeField;
        
        private string connectivityTypeField;
        
        private string displayResolutionMaximumField;
        
        private List<PersonalComputerGraphicsCard> graphicsCardField;
        
        private string graphicsChipsetBrandField;
        
        private string graphicsCoProcessorField;
        
        private string graphicsRAMTypeField;
        
        private decimal hardDiskRotationalSpeedField;
        
        private bool hardDiskRotationalSpeedFieldSpecified;
        
        private string hardDiskTechnologyField;
        
        private List<HardDriveInterfaceTypeValues> hardDriveInterfaceField;
        
        private List<MemorySizeDimension> hardDriveSizeField;
        
        private string hardwarePlatformField;
        
        private MemorySizeDimension maxExpandedMemorySupportedField;
        
        private string modelNumberField;
        
        private string numberOfAudioOutPortsField;
        
        private string numberOfDMIPortsField;
        
        private string numberOfEthernetPortsField;
        
        private string numberOfFirewirePortsField;
        
        private string numberOfGamingPortsField;
        
        private string numberOfHDMIPortsField;
        
        private string numberOfLPT1PrinterPortsField;
        
        private string numberOfMicrophonePortsField;
        
        private string numberOfPS2PortsField;
        
        private string numberOfSerialPortsField;
        
        private string numberOfUSB20PortsField;
        
        private string numberOfUSB30PortsField;
        
        private string numberOfVGAPortsField;
        
        private List<string> operatingSystemField;
        
        private string opticalDeviceTypeField;
        
        private string opticalStorageDeviceTypeField;
        
        private string opticalDriveIntegratedField;
        
        private string processorBrandField;
        
        private string processorCountField;
        
        private string processorSocketField;
        
        private FrequencyDimension processorSpeedField;
        
        private ProcessorTypeValues processorTypeField;
        
        private bool processorTypeFieldSpecified;
        
        private string rAMClockSpeedField;
        
        private string rAMFormFactorField;
        
        private MemorySizeDimension rAMSizeField;
        
        private string rAMTechnologyField;
        
        private ResolutionFiveDigitDimension rearWebcamResolutionField;
        
        private string responseTimeField;
        
        private string screenResolutionField;
        
        private string seriesField;
        
        private string softwareIncludedField;
        
        private string speakerField;
        
        private List<TabletInputMethodTypeValues> tabletInputMethodField;
        
        private string tunerTechnologyField;
        
        private string uRackSizeField;
        
        private string viewingAngleField;
        
        private string notebookDisplayTechnologyField;
        
        private LengthDimension screenSizeField;
        
        private bool hasColorScreenField;
        
        private bool hasColorScreenFieldSpecified;
        
        private string displayTechnologyField;
        
        private string monitorTunerTechnologyField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private List<WirelessCarrierTypeValues> wirelessCarrierField;
        
        private List<WirelessTypeValues> wirelessTypeField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Audio {get; set;}

    public CardReaderTypeValues CardReader {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CardReaderSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ComputerTunerTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ConnectivityType {get; set;}

    public string DisplayResolutionMaximum {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsChipsetBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsCoProcessor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsRAMType {get; set;}

    public decimal HardDiskRotationalSpeed {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HardDiskRotationalSpeedSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HardDiskTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HardwarePlatform {get; set;}

    public MemorySizeDimension MaxExpandedMemorySupported {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfAudioOutPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfEthernetPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfFirewirePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfGamingPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfHDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfLPT1PrinterPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfMicrophonePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfPS2Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfSerialPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("NumberOfUSB2.0Ports",DataType="positiveInteger")]
    public string NumberOfUSB20Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("NumberOfUSB3.0Ports",DataType="positiveInteger")]
    public string NumberOfUSB30Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfVGAPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalDeviceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalStorageDeviceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string OpticalDriveIntegrated {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ProcessorCount {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorSocket {get; set;}

    public FrequencyDimension ProcessorSpeed {get; set;}

    public ProcessorTypeValues ProcessorType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ProcessorTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string RAMClockSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAMFormFactor {get; set;}

    public MemorySizeDimension RAMSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAMTechnology {get; set;}

    public ResolutionFiveDigitDimension RearWebcamResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ResponseTime {get; set;}

    public string ScreenResolution {get; set;}

    public string Series {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SoftwareIncluded {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Speaker {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string TunerTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("U-RackSize",DataType="positiveInteger")]
    public string URackSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ViewingAngle {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string NotebookDisplayTechnology {get; set;}

    public LengthDimension ScreenSize {get; set;}

    public bool HasColorScreen {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasColorScreenSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DisplayTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MonitorTunerTechnology {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public PersonalComputer() {
            this.wirelessTypeField = new List<WirelessTypeValues>();
            this.wirelessCarrierField = new List<WirelessCarrierTypeValues>();
            this.tabletInputMethodField = new List<TabletInputMethodTypeValues>();
            this.rearWebcamResolutionField = new ResolutionFiveDigitDimension();
            this.operatingSystemField = new List<string>();
            this.hardDriveSizeField = new List<MemorySizeDimension>();
            this.hardDriveInterfaceField = new List<HardDriveInterfaceTypeValues>();
            this.graphicsCardField = new List<PersonalComputerGraphicsCard>();
            this.computerWirelessTypeField = new List<ComputerWirelessTypeValues>();
            this.computerMemoryTypeField = new List<ComputerMemoryTypeValues>();
            this.additionalDrivesField = new List<AdditionalDrivesTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AdditionalDrives")]
        public List<AdditionalDrivesTypeValues> AdditionalDrives {
            get {
                return this.additionalDrivesField;
            }
            set {
                this.additionalDrivesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ComputerMemoryType")]
        public List<ComputerMemoryTypeValues> ComputerMemoryType {
            get {
                return this.computerMemoryTypeField;
            }
            set {
                this.computerMemoryTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ComputerWirelessType")]
        public List<ComputerWirelessTypeValues> ComputerWirelessType {
            get {
                return this.computerWirelessTypeField;
            }
            set {
                this.computerWirelessTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GraphicsCard")]
        public List<PersonalComputerGraphicsCard> GraphicsCard {
            get {
                return this.graphicsCardField;
            }
            set {
                this.graphicsCardField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveInterface")]
        public List<HardDriveInterfaceTypeValues> HardDriveInterface {
            get {
                return this.hardDriveInterfaceField;
            }
            set {
                this.hardDriveInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveSize")]
        public List<MemorySizeDimension> HardDriveSize {
            get {
                return this.hardDriveSizeField;
            }
            set {
                this.hardDriveSizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OperatingSystem", DataType="normalizedString")]
        public List<string> OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TabletInputMethod")]
        public List<TabletInputMethodTypeValues> TabletInputMethod {
            get {
                return this.tabletInputMethodField;
            }
            set {
                this.tabletInputMethodField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WirelessCarrier")]
        public List<WirelessCarrierTypeValues> WirelessCarrier {
            get {
                return this.wirelessCarrierField;
            }
            set {
                this.wirelessCarrierField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WirelessType")]
        public List<WirelessTypeValues> WirelessType {
            get {
                return this.wirelessTypeField;
            }
            set {
                this.wirelessTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Printer {
        
        private VariationData variationDataField;
        
        private string hasGreyScaleField;
        
        private string lightSourceTypeField;
        
        private string maxInputSheetCapacityField;
        
        private string maxPrintResolutionBlackWhiteField;
        
        private string maxPrintResolutionColorField;
        
        private string maxPrintSpeedBlackWhiteField;
        
        private string maxPrintSpeedColorField;
        
        private string maxScanningSizeField;
        
        private string minScanningSizeField;
        
        private string printerMediaSizeMaximumField;
        
        private string printerOutputTypeField;
        
        private List<PrinterWirelessTypeValues> printerWirelessTypeField;
        
        private bool printingMediaTypeFieldSpecified;
        
        private string printingTechnologyField;
        
        private string scanRateField;
        
        private string scannerResolutionField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HasGreyScale {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string LightSourceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MaxInputSheetCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxPrintResolutionBlackWhite {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxPrintResolutionColor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MaxPrintSpeedBlackWhite {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MaxPrintSpeedColor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxScanningSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MinScanningSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrinterMediaSizeMaximum {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrinterOutputType {get; set;}

    public PrintingMediaTypeValues PrintingMediaType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PrintingMediaTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrintingTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ScanRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ScannerResolution {get; set;}

        
        public Printer() {
            this.printerWirelessTypeField = new List<PrinterWirelessTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PrinterWirelessType")]
        public List<PrinterWirelessTypeValues> PrinterWirelessType {
            get {
                return this.printerWirelessTypeField;
            }
            set {
                this.printerWirelessTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class RamMemory {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string casLatencyField;
        
        private string computerMemoryFormFactorField;
        
        private string computerMemoryTechnologyField;
        
        private decimal maxMemorySpeedField;
        
        private bool maxMemorySpeedFieldSpecified;
        
        private MemorySizeFiveDigitIntegerDimension memoryCapacityPerSTICKField;
        
        private string modelNumberField;
        
        private string multiChannelKitField;
        
        private string numberOfMemorySticksField;
        
        private string rAMClockSpeedField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private VoltageSevenDigitDecimalDimension voltageRatingField;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string CasLatency {get; set;}

    public string ComputerMemoryFormFactor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ComputerMemoryTechnology {get; set;}

    public decimal MaxMemorySpeed {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxMemorySpeedSpecified {get; set;}

    public MemorySizeFiveDigitIntegerDimension MemoryCapacityPerSTICK {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MultiChannelKit {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfMemorySticks {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string RAMClockSpeed {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    public VoltageSevenDigitDecimalDimension VoltageRating {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public RamMemory() {
            this.voltageRatingField = new VoltageSevenDigitDecimalDimension();
            this.memoryCapacityPerSTICKField = new MemorySizeFiveDigitIntegerDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("MemoryCapacityPerSTICK", Namespace="", IsNullable=false)]
    public partial class MemorySizeFiveDigitIntegerDimension {
        
        private MemorySizeUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public MemorySizeUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("VoltageRating", Namespace="", IsNullable=false)]
    public partial class VoltageSevenDigitDecimalDimension {
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VoltageUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Scanner {
        
        private VariationData variationDataField;
        
        private string hasGreyScaleField;
        
        private string lightSourceTypeField;
        
        private string maxInputSheetCapacityField;
        
        private string maxPrintResolutionBlackWhiteField;
        
        private string maxPrintResolutionColorField;
        
        private string maxPrintSpeedBlackWhiteField;
        
        private string maxPrintSpeedColorField;
        
        private string maxScanningSizeField;
        
        private string minScanningSizeField;
        
        private string printerMediaSizeMaximumField;
        
        private string printerOutputTypeField;
        
        private List<PrinterWirelessTypeValues> printerWirelessTypeField;
        
        private PrintingMediaTypeValues printingMediaTypeField;
        
        private bool printingMediaTypeFieldSpecified;
        
        private string printingTechnologyField;
        
        private string scanRateField;
        
        private string scannerResolutionField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HasGreyScale {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string LightSourceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string MaxInputSheetCapacity {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxPrintResolutionBlackWhite {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxPrintResolutionColor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxPrintSpeedBlackWhite {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxPrintSpeedColor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaxScanningSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MinScanningSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrinterMediaSizeMaximum {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrinterOutputType {get; set;}

    public PrintingMediaTypeValues PrintingMediaType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PrintingMediaTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PrintingTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ScanRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ScannerResolution {get; set;}

        
        public Scanner() {
            this.printerWirelessTypeField = new List<PrinterWirelessTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PrinterWirelessType")]
        public List<PrinterWirelessTypeValues> PrinterWirelessType {
            get {
                return this.printerWirelessTypeField;
            }
            set {
                this.printerWirelessTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class SoundCard {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string bundledSoftwareField;
        
        private decimal channelsField;
        
        private bool channelsFieldSpecified;
        
        private string lineInField;
        
        private string modelNumberField;
        
        private string opticalInField;
        
        private string opticalOutField;
        
        private FrequencyThreeDigitIntegerDimension sampleRateField;
        
        private bool soundCardInterfaceFieldSpecified;
        
        private string soundCardMinSystemRequirementsField;
        
        private string speakerOutField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string BundledSoftware {get; set;}

    public decimal Channels {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ChannelsSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string LineIn {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalIn {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalOut {get; set;}

    public FrequencyThreeDigitIntegerDimension SampleRate {get; set;}

    public SoundCardInterfaceTypeValues SoundCardInterface {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SoundCardInterfaceSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SoundCardMinSystemRequirements {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SpeakerOut {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public SoundCard() {
            this.sampleRateField = new FrequencyThreeDigitIntegerDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("SampleRate", Namespace="", IsNullable=false)]
    public partial class FrequencyThreeDigitIntegerDimension {
        
        private FrequencyUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FrequencyUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class SystemCabinet {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string airDuctLocationField;
        
        private string expansionSlotsField;
        
        private List<LengthFourDigitDimension> externalBayTypeField;
        
        private List<LengthFourDigitDimension> hotswapBayTypeField;
        
        private List<LengthFourDigitDimension> internalBayTypeField;
        
        private string materialTypeField;
        
        private string modelNumberField;
        
        private string motherboardCompatibilityField;
        
        private string panelWindowLocationField;
        
        private PowerSixDigitDimension powerSupplyMaxOutputField;
        
        private string powerSupplyMountingField;
        
        private string systemCabinetFormFactorField;
        
        private string totalFrontPanelAudioInPortsField;
        
        private string totalFrontPanelAudioOutPortsField;
        
        private string totalFrontPaneleSataPortsField;
        
        private string totalFrontPanelFirewire400PortsField;
        
        private string totalFrontPanelFirewire800PortsField;
        
        private string totalFrontPanelUSB10PortsField;
        
        private string totalFrontPanelUSB11PortsField;
        
        private string totalFrontPanelUSB20PortsField;
        
        private string totalFrontPanelUSB30PortsField;
        
        private string totalNumberOfExternalBaysField;
        
        private string totalNumberOfHotswapBaysField;
        
        private string totalNumberOfInternalBaysField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public string AirDuctLocation {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ExpansionSlots {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MaterialType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MotherboardCompatibility {get; set;}

    public string PanelWindowLocation {get; set;}

    public PowerSixDigitDimension PowerSupplyMaxOutput {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PowerSupplyMounting {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SystemCabinetFormFactor {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFrontPanelAudioInPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFrontPanelAudioOutPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFrontPaneleSataPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFrontPanelFirewire400Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalFrontPanelFirewire800Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalFrontPanelUSB1.0Ports",DataType="positiveInteger")]
    public string TotalFrontPanelUSB10Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalFrontPanelUSB1.1Ports",DataType="positiveInteger")]
    public string TotalFrontPanelUSB11Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalFrontPanelUSB2.0Ports",DataType="positiveInteger")]
    public string TotalFrontPanelUSB20Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("TotalFrontPanelUSB3.0Ports",DataType="positiveInteger")]
    public string TotalFrontPanelUSB30Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalNumberOfExternalBays {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalNumberOfHotswapBays {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalNumberOfInternalBays {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public SystemCabinet() {
            this.powerSupplyMaxOutputField = new PowerSixDigitDimension();
            this.internalBayTypeField = new List<LengthFourDigitDimension>();
            this.hotswapBayTypeField = new List<LengthFourDigitDimension>();
            this.externalBayTypeField = new List<LengthFourDigitDimension>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ExternalBayType")]
        public List<LengthFourDigitDimension> ExternalBayType {
            get {
                return this.externalBayTypeField;
            }
            set {
                this.externalBayTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HotswapBayType")]
        public List<LengthFourDigitDimension> HotswapBayType {
            get {
                return this.hotswapBayTypeField;
            }
            set {
                this.hotswapBayTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InternalBayType")]
        public List<LengthFourDigitDimension> InternalBayType {
            get {
                return this.internalBayTypeField;
            }
            set {
                this.internalBayTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ExternalBayType", Namespace="", IsNullable=false)]
    public partial class LengthFourDigitDimension {
        
        private LengthUnitOfMeasure unitOfMeasureField;
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public LengthUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PowerSupplyMaxOutput", Namespace="", IsNullable=false)]
    public partial class PowerSixDigitDimension {
        
        private decimal valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PowerUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute()]
    public decimal Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class SystemPowerDevice {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private string energyEfficiencyRatingField;
        
        private string mainPowerConnectorField;
        
        private string modelNumberField;
        
        private string modularField;
        
        private string numberOfSATAPowerConnectorsField;
        
        private string pCIExpressConnectorConfigurationField;
        
        private string powerFactorCorrectionField;
        
        private string powerSupplyFormFactorField;
        
        private PowerSixDigitDimension powerSupplyMaxOutputField;
        
        private string sLICertificationField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public string EnergyEfficiencyRating {get; set;}

    public string MainPowerConnector {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Modular {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfSATAPowerConnectors {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PCIExpressConnectorConfiguration {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PowerFactorCorrection {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string PowerSupplyFormFactor {get; set;}

    public PowerSixDigitDimension PowerSupplyMaxOutput {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SLICertification {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public SystemPowerDevice() {
            this.powerSupplyMaxOutputField = new PowerSixDigitDimension();
            this.variationDataField = new VariationData();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class TabletComputer {
        
        private VariationData variationDataField;
        
        private List<AdditionalDrivesTypeValues> additionalDrivesField;
        
        private string audioField;
        
        private string batteryChargeCyclesField;
        
        private CardReaderTypeValues cardReaderField;
        
        private bool cardReaderFieldSpecified;
        
        private List<ComputerMemoryTypeValues> computerMemoryTypeField;
        
        private string connectivityTypeField;
        
        private string displayResolutionMaximumField;
        
        private ResolutionFiveDigitDimension frontWebcamResolutionField;
        
        private List<TabletComputerGraphicsCard> graphicsCardField;
        
        private string graphicsChipsetBrandField;
        
        private string graphicsCoProcessorField;
        
        private GraphicsRAMTypeValues graphicsRAMTypeField;
        
        private bool graphicsRAMTypeFieldSpecified;
        
        private decimal hardDiskRotationalSpeedField;
        
        private bool hardDiskRotationalSpeedFieldSpecified;
        
        private string hardDiskTechnologyField;
        
        private List<HardDriveInterfaceTypeValues> hardDriveInterfaceField;
        
        private List<MemorySizeDimension> hardDriveSizeField;
        
        private string hardwarePlatformField;
        
        private bool hasColorScreenField;
        
        private bool hasColorScreenFieldSpecified;
        
        private MemorySizeDimension maxExpandedMemorySupportedField;
        
        private string modelNumberField;
        
        private string notebookDisplayTechnologyField;
        
        private string numberOfAudioOutPortsField;
        
        private string numberOfDMIPortsField;
        
        private string numberOfEthernetPortsField;
        
        private string numberOfFirewirePortsField;
        
        private string numberOfGamingPortsField;
        
        private string numberOfHDMIPortsField;
        
        private string numberOfLPT1PrinterPortsField;
        
        private string numberOfMicrophonePortsField;
        
        private string numberOfPS2PortsField;
        
        private string numberOfSerialPortsField;
        
        private string numberOfUSB20PortsField;
        
        private string numberOfUSB30PortsField;
        
        private string numberOfVGAPortsField;
        
        private List<string> operatingSystemField;
        
        private string opticalDriveIntegratedField;
        
        private string opticalStorageDeviceTypeField;
        
        private string processorBrandField;
        
        private string processorCountField;
        
        private string processorSocketField;
        
        private FrequencyDimension processorSpeedField;
        
        private ProcessorTypeValues processorTypeField;
        
        private bool processorTypeFieldSpecified;
        
        private string rAMClockSpeedField;
        
        private string rAMFormFactorField;
        
        private MemorySizeDimension rAMSizeField;
        
        private string rAMTechnologyField;
        
        private ResolutionFiveDigitDimension rearWebcamResolutionField;
        
        private string responseTimeField;
        
        private string screenResolutionField;
        
        private LengthDimension screenSizeField;
        
        private string seriesField;
        
        private string softwareIncludedField;
        
        private string speakerField;
        
        private List<TabletInputMethodTypeValues> tabletInputMethodField;
        
        private string tunerTechnologyField;
        
        private string viewingAngleField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private List<WirelessCarrierTypeValues> wirelessCarrierField;
        
        private List<WirelessTypeValues> wirelessTypeField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Audio {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string BatteryChargeCycles {get; set;}

    public CardReaderTypeValues CardReader {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CardReaderSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ConnectivityType {get; set;}

    public string DisplayResolutionMaximum {get; set;}

    public ResolutionFiveDigitDimension FrontWebcamResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsChipsetBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsCoProcessor {get; set;}

    public GraphicsRAMTypeValues GraphicsRAMType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GraphicsRAMTypeSpecified {get; set;}

    public decimal HardDiskRotationalSpeed {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HardDiskRotationalSpeedSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HardDiskTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HardwarePlatform {get; set;}

    public bool HasColorScreen {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasColorScreenSpecified {get; set;}

    public MemorySizeDimension MaxExpandedMemorySupported {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string NotebookDisplayTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfAudioOutPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfEthernetPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfFirewirePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfGamingPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfHDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfLPT1PrinterPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfMicrophonePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfPS2Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfSerialPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("NumberOfUSB2.0Ports",DataType="positiveInteger")]
    public string NumberOfUSB20Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute("NumberOfUSB3.0Ports",DataType="positiveInteger")]
    public string NumberOfUSB30Ports {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string NumberOfVGAPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string OpticalDriveIntegrated {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string OpticalStorageDeviceType {get; set;}

    public string ProcessorBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ProcessorCount {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ProcessorSocket {get; set;}

    public FrequencyDimension ProcessorSpeed {get; set;}

    public ProcessorTypeValues ProcessorType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ProcessorTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string RAMClockSpeed {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAMFormFactor {get; set;}

    public MemorySizeDimension RAMSize {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string RAMTechnology {get; set;}

    public ResolutionFiveDigitDimension RearWebcamResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ResponseTime {get; set;}

    public string ScreenResolution {get; set;}

    public LengthDimension ScreenSize {get; set;}

    public string Series {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string SoftwareIncluded {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Speaker {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string TunerTechnology {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string ViewingAngle {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public TabletComputer() {
            this.wirelessTypeField = new List<WirelessTypeValues>();
            this.wirelessCarrierField = new List<WirelessCarrierTypeValues>();
            this.tabletInputMethodField = new List<TabletInputMethodTypeValues>();
            this.rearWebcamResolutionField = new ResolutionFiveDigitDimension();
            this.operatingSystemField = new List<string>();
            this.hardDriveSizeField = new List<MemorySizeDimension>();
            this.hardDriveInterfaceField = new List<HardDriveInterfaceTypeValues>();
            this.graphicsCardField = new List<TabletComputerGraphicsCard>();
            this.frontWebcamResolutionField = new ResolutionFiveDigitDimension();
            this.computerMemoryTypeField = new List<ComputerMemoryTypeValues>();
            this.additionalDrivesField = new List<AdditionalDrivesTypeValues>();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AdditionalDrives")]
        public List<AdditionalDrivesTypeValues> AdditionalDrives {
            get {
                return this.additionalDrivesField;
            }
            set {
                this.additionalDrivesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ComputerMemoryType")]
        public List<ComputerMemoryTypeValues> ComputerMemoryType {
            get {
                return this.computerMemoryTypeField;
            }
            set {
                this.computerMemoryTypeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GraphicsCard")]
        public List<TabletComputerGraphicsCard> GraphicsCard {
            get {
                return this.graphicsCardField;
            }
            set {
                this.graphicsCardField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveInterface")]
        public List<HardDriveInterfaceTypeValues> HardDriveInterface {
            get {
                return this.hardDriveInterfaceField;
            }
            set {
                this.hardDriveInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("HardDriveSize")]
        public List<MemorySizeDimension> HardDriveSize {
            get {
                return this.hardDriveSizeField;
            }
            set {
                this.hardDriveSizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OperatingSystem", DataType="normalizedString")]
        public List<string> OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TabletInputMethod")]
        public List<TabletInputMethodTypeValues> TabletInputMethod {
            get {
                return this.tabletInputMethodField;
            }
            set {
                this.tabletInputMethodField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WirelessCarrier")]
        public List<WirelessCarrierTypeValues> WirelessCarrier {
            get {
                return this.wirelessCarrierField;
            }
            set {
                this.wirelessCarrierField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("WirelessType")]
        public List<WirelessTypeValues> WirelessType {
            get {
                return this.wirelessTypeField;
            }
            set {
                this.wirelessTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class VideoCard {
        
        private VariationData variationDataField;
        
        private string additionalFeaturesField;
        
        private FrequencyIntegerDimension coreClockField;
        
        private FrequencyIntegerDimension effectiveMemoryClockField;
        
        private string graphicsCardCoolerField;
        
        private List<GraphicsCardInterfaceTypeValues> graphicsCardInterfaceField;
        
        private string graphicsCardMaxResolutionField;
        
        private MemoryInterfaceDimension graphicsCardMemoryInterfaceField;
        
        private string graphicsCardMemoryTypeField;
        
        private string graphicsChipsetBrandField;
        
        private string graphicsCoProcessorField;
        
        private List<MemorySizeDimension> graphicsRAMSizeField;
        
        private GraphicsRAMTypeValues graphicsRAMTypeField;
        
        private bool graphicsRAMTypeFieldSpecified;
        
        private string modelNumberField;
        
        private string multiGPUTechnologyField;
        
        private FrequencyIntegerDimension shaderClockField;
        
        private List<string> threeDAPIField;
        
        private string totalCompositePortsField;
        
        private string totalDVIPortsField;
        
        private string totalHDMIPortsField;
        
        private string totalMiniHDMIPortsField;
        
        private string totalSVideoOutPortsField;
        
        private string totalVGAOutPortsField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AdditionalFeatures {get; set;}

    public FrequencyIntegerDimension CoreClock {get; set;}

    public FrequencyIntegerDimension EffectiveMemoryClock {get; set;}

    public string GraphicsCardCooler {get; set;}

    public string GraphicsCardMaxResolution {get; set;}

    public MemoryInterfaceDimension GraphicsCardMemoryInterface {get; set;}

    public string GraphicsCardMemoryType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsChipsetBrand {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string GraphicsCoProcessor {get; set;}

    public GraphicsRAMTypeValues GraphicsRAMType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GraphicsRAMTypeSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public string MultiGPUTechnology {get; set;}

    public FrequencyIntegerDimension ShaderClock {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalCompositePorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalDVIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalHDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalMiniHDMIPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalSVideoOutPorts {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string TotalVGAOutPorts {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

        
        public VideoCard() {
            this.threeDAPIField = new List<string>();
            this.shaderClockField = new FrequencyIntegerDimension();
            this.graphicsRAMSizeField = new List<MemorySizeDimension>();
            this.graphicsCardMemoryInterfaceField = new MemoryInterfaceDimension();
            this.graphicsCardInterfaceField = new List<GraphicsCardInterfaceTypeValues>();
            this.effectiveMemoryClockField = new FrequencyIntegerDimension();
            this.coreClockField = new FrequencyIntegerDimension();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GraphicsCardInterface")]
        public List<GraphicsCardInterfaceTypeValues> GraphicsCardInterface {
            get {
                return this.graphicsCardInterfaceField;
            }
            set {
                this.graphicsCardInterfaceField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GraphicsRAMSize")]
        public List<MemorySizeDimension> GraphicsRAMSize {
            get {
                return this.graphicsRAMSizeField;
            }
            set {
                this.graphicsRAMSizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ThreeDAPI")]
        public List<string> ThreeDAPI {
            get {
                return this.threeDAPIField;
            }
            set {
                this.threeDAPIField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GraphicsCardMemoryInterface", Namespace="", IsNullable=false)]
    public partial class MemoryInterfaceDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public MemoryInterfaceUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class VideoProjector {
        
        private VariationData variationDataField;
        
        private string hasGreyScaleField;
        
        private string lightSourceTypeField;
        
        private string scannerResolutionField;
        
        private string aspectRatioField;
        
        private decimal audibleNoiseField;
        
        private bool audibleNoiseFieldSpecified;
        
        private string builtinSpeakerField;
        
        private string contrastRatioField;
        
        private string displayResolutionMaximumField;
        
        private string displayTechnologyField;
        
        private LengthSevenDigitDimension imageDiagonalSizeField;
        
        private List<string> inputVideoCompatabilityField;
        
        private bool inputVideoConnectorsFieldSpecified;
        
        private LengthSevenDigitDimension keystoneCorrectionField;
        
        private BurnTimeSixDigitDimension lampLifeField;
        
        private string lampWattageField;
        
        private string lensField;
        
        private FrequencyFiveDigitIntegerDimension maximumHorizontalRefreshRateField;
        
        private LengthSevenDigitDimension maximumImageSizeField;
        
        private decimal maximumThrowDistanceField;
        
        private bool maximumThrowDistanceFieldSpecified;
        
        private string maximumThrowRatioField;
        
        private FrequencyFiveDigitIntegerDimension maximumVerticalRefreshRateField;
        
        private string mediaInputField;
        
        private FrequencyFiveDigitIntegerDimension minimumHorizontalRefreshRateField;
        
        private LengthSevenDigitDimension minimumImageSizeField;
        
        private decimal minimumThrowDistanceField;
        
        private bool minimumThrowDistanceFieldSpecified;
        
        private string minimumThrowRatioField;
        
        private FrequencyFiveDigitIntegerDimension minimumVerticalRefreshRateField;
        
        private string modelNumberField;
        
        private LuminanceFiveDigitDimension projectorBrightnessField;
        
        private string remoteField;
        
        private string screenResolutionField;
        
        private VoltageFiveDigitIntegerDimension screenTriggerField;
        
        private string threeDReadyField;
        
        private WirelessStandardTypeValues wirelessStandardField;
        
        private bool wirelessStandardFieldSpecified;
        
        private string zoomField;
        
        private string zoomRatioField;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string HasGreyScale {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string LightSourceType {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ScannerResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string AspectRatio {get; set;}

    public decimal AudibleNoise {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AudibleNoiseSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string BuiltinSpeaker {get; set;}

    public string ContrastRatio {get; set;}

    public string DisplayResolutionMaximum {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string DisplayTechnology {get; set;}

    public LengthSevenDigitDimension ImageDiagonalSize {get; set;}

    public InputVideoConnectorsTypeValues InputVideoConnectors {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool InputVideoConnectorsSpecified {get; set;}

    public LengthSevenDigitDimension KeystoneCorrection {get; set;}

    public BurnTimeSixDigitDimension LampLife {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string LampWattage {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Lens {get; set;}

    public FrequencyFiveDigitIntegerDimension MaximumHorizontalRefreshRate {get; set;}

    public LengthSevenDigitDimension MaximumImageSize {get; set;}

    public decimal MaximumThrowDistance {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaximumThrowDistanceSpecified {get; set;}

    public string MaximumThrowRatio {get; set;}

    public FrequencyFiveDigitIntegerDimension MaximumVerticalRefreshRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MediaInput {get; set;}

    public FrequencyFiveDigitIntegerDimension MinimumHorizontalRefreshRate {get; set;}

    public LengthSevenDigitDimension MinimumImageSize {get; set;}

    public decimal MinimumThrowDistance {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MinimumThrowDistanceSpecified {get; set;}

    public string MinimumThrowRatio {get; set;}

    public FrequencyFiveDigitIntegerDimension MinimumVerticalRefreshRate {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public LuminanceFiveDigitDimension ProjectorBrightness {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string Remote {get; set;}

    public string ScreenResolution {get; set;}

    public VoltageFiveDigitIntegerDimension ScreenTrigger {get; set;}

    public string ThreeDReady {get; set;}

    public WirelessStandardTypeValues WirelessStandard {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WirelessStandardSpecified {get; set;}

    public string Zoom {get; set;}

    public string ZoomRatio {get; set;}

        
        public VideoProjector() {
            this.screenTriggerField = new VoltageFiveDigitIntegerDimension();
            this.projectorBrightnessField = new LuminanceFiveDigitDimension();
            this.minimumVerticalRefreshRateField = new FrequencyFiveDigitIntegerDimension();
            this.minimumImageSizeField = new LengthSevenDigitDimension();
            this.minimumHorizontalRefreshRateField = new FrequencyFiveDigitIntegerDimension();
            this.maximumVerticalRefreshRateField = new FrequencyFiveDigitIntegerDimension();
            this.maximumImageSizeField = new LengthSevenDigitDimension();
            this.maximumHorizontalRefreshRateField = new FrequencyFiveDigitIntegerDimension();
            this.lampLifeField = new BurnTimeSixDigitDimension();
            this.keystoneCorrectionField = new LengthSevenDigitDimension();
            this.inputVideoCompatabilityField = new List<string>();
            this.imageDiagonalSizeField = new LengthSevenDigitDimension();
            this.variationDataField = new VariationData();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InputVideoCompatability")]
        public List<string> InputVideoCompatability {
            get {
                return this.inputVideoCompatabilityField;
            }
            set {
                this.inputVideoCompatabilityField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("LampLife", Namespace="", IsNullable=false)]
    public partial class BurnTimeSixDigitDimension {
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public BurnTimeUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("MaximumHorizontalRefreshRate", Namespace="", IsNullable=false)]
    public partial class FrequencyFiveDigitIntegerDimension {
        
        private FrequencyUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FrequencyUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ScreenTrigger", Namespace="", IsNullable=false)]
    public partial class VoltageFiveDigitIntegerDimension {
        
        private VoltageUnitOfMeasure unitOfMeasureField;
        
        private string valueField;
        
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VoltageUnitOfMeasure unitOfMeasure {get; set;}

    [System.Xml.Serialization.XmlTextAttribute(DataType="positiveInteger")]
    public string Value {get; set;}

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.4.0.32990")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Webcam {
        
        private VariationData variationDataField;
        
        private string builtInMicrophoneField;
        
        private string cameraTypeField;
        
        private ResolutionFiveDigitDimension digitalStillResolutionField;
        
        private string imageSensorField;
        
        private InputTypeValues inputTypeField;
        
        private bool inputTypeFieldSpecified;
        
        private ResolutionFiveDigitDimension maxWebcamImageResolutionField;
        
        private string minimumSystemRequirementsField;
        
        private string modelNumberField;
        
        private string networkingProtocolField;
        
        private ResolutionFiveDigitDimension videoCallingResolutionField;
        
        private decimal voltageField;
        
        private bool voltageFieldSpecified;
        
        private string wattageField;
        
        private ResolutionFiveDigitDimension webcamVideoCaptureResolutionField;
        
        private WirelessStandardTypeValues wirelessStandardField;
        
        private bool wirelessStandardFieldSpecified;
        
    public VariationData VariationData {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string BuiltInMicrophone {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string CameraType {get; set;}

    public ResolutionFiveDigitDimension DigitalStillResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ImageSensor {get; set;}

    public InputTypeValues InputType {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool InputTypeSpecified {get; set;}

    public ResolutionFiveDigitDimension MaxWebcamImageResolution {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string MinimumSystemRequirements {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
    public string ModelNumber {get; set;}

    public string NetworkingProtocol {get; set;}

    public ResolutionFiveDigitDimension VideoCallingResolution {get; set;}

    public decimal Voltage {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VoltageSpecified {get; set;}

    [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
    public string Wattage {get; set;}

    public ResolutionFiveDigitDimension WebcamVideoCaptureResolution {get; set;}

    public WirelessStandardTypeValues WirelessStandard {get; set;}

    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WirelessStandardSpecified {get; set;}

        
        public Webcam() {
            this.webcamVideoCaptureResolutionField = new ResolutionFiveDigitDimension();
            this.videoCallingResolutionField = new ResolutionFiveDigitDimension();
            this.maxWebcamImageResolutionField = new ResolutionFiveDigitDimension();
            this.digitalStillResolutionField = new ResolutionFiveDigitDimension();
            this.variationDataField = new VariationData();
        }
    }
}

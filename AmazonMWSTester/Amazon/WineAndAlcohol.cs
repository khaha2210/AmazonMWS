using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AmazonMWSTester.Amazon
{
	public partial class WineAndAlcohol : ProductProductData
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class WineAndAlcoholProductType { private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlElementAttribute("Beer", typeof(object))]
[System.Xml.Serialization.XmlElementAttribute("Spirits", typeof(object))]
[System.Xml.Serialization.XmlElementAttribute("Wine", typeof(WineAndAlcoholProductTypeWine))]
[System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] public object Item { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public ItemChoiceType1 ItemElementName { get; set; } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(WineAndAlcoholProductType)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class WineAndAlcoholVariationData { private WeightDimension itemDisplayWeightField; private static System.Xml.Serialization.XmlSerializer serializer; public WineAndAlcoholVariationDataParentage Parentage { get; set; } public WineAndAlcoholVariationDataVariationTheme VariationTheme { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool VariationThemeSpecified { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Size { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Flavor { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string PatternName { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Color { get; set; } public WineAndAlcoholVariationData() { this.itemDisplayWeightField = new WeightDimension(); } public WeightDimension ItemDisplayWeight { get { return this.itemDisplayWeightField; } set { this.itemDisplayWeightField = value; } } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(WineAndAlcoholVariationData)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()] public enum CustomerReturnPolicyType { collectible, restocking_fee, standard, non_returnable, seasonal, unknown, }

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class WineAndAlcoholProductTypeWine { private List<string> blendGrapeVarietalField; private List<string> varietalCompositionField; private SweetnessAtHarvestDimension sweetnessAtHarvestField; private VineyardYieldDimension vineyardYieldField; private List<string> vineyardDescriptionField; private TemperatureDimension harvestTemperatureField; private List<string> shortDescriptionField; private List<RaterType> wineRatingRaterField; private List<string> wineRatingScoreField; private List<string> wineRatingReviewField; private static System.Xml.Serialization.XmlSerializer serializer; public System.DateTime HarvestDate { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool HarvestDateSpecified { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Appellation { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string VineDescription { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string VineAge { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string AdditionalProductInformation { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string WineType { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Designation { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string SubAppellation { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string ShippingGroup { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string DrinkingRangeEndYear { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Winemaker { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string DrinkingRangeStartYear { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string CloneName { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Rootstock { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Negociant { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string VarietalDesignation { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string RegionalWineClassification { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string SoilType { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string ViticultureMethod { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string Vintage { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string FiningMaterial { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string VinificationMethod { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string CoverArt { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string GrapeAverageSize { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string GrapeAverageWeight { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string HarvestTimeOfDay { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string SweetnessDescription { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string ResidualSugar { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string TotalAcidity { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string AgingProgram { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string BottleCountryOfManufacture { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string BottleColor { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string FirstProductionYear { get; set; } public System.DateTime ReleaseDate { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool ReleaseDateSpecified { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string HandlingTime { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string InternationalWineCellarRating { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string JamesSucklingRating { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string BurghoundRating { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string WineSpiritsRating { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string JamesHallidayRating { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string AntonioGalloniRating { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string SuggestedFoodPairing { get; set; } public WineAndAlcoholProductTypeWine() { this.wineRatingReviewField = new List<string>(); this.wineRatingScoreField = new List<string>(); this.wineRatingRaterField = new List<RaterType>(); this.shortDescriptionField = new List<string>(); this.harvestTemperatureField = new TemperatureDimension(); this.vineyardDescriptionField = new List<string>(); this.vineyardYieldField = new VineyardYieldDimension(); this.sweetnessAtHarvestField = new SweetnessAtHarvestDimension(); this.varietalCompositionField = new List<string>(); this.blendGrapeVarietalField = new List<string>(); }[System.Xml.Serialization.XmlElementAttribute("BlendGrapeVarietal", DataType = "normalizedString")] public List<string> BlendGrapeVarietal { get { return this.blendGrapeVarietalField; } set { this.blendGrapeVarietalField = value; } }[System.Xml.Serialization.XmlElementAttribute("VarietalComposition", DataType = "normalizedString")] public List<string> VarietalComposition { get { return this.varietalCompositionField; } set { this.varietalCompositionField = value; } } public SweetnessAtHarvestDimension SweetnessAtHarvest { get { return this.sweetnessAtHarvestField; } set { this.sweetnessAtHarvestField = value; } } public VineyardYieldDimension VineyardYield { get { return this.vineyardYieldField; } set { this.vineyardYieldField = value; } }[System.Xml.Serialization.XmlElementAttribute("VineyardDescription", DataType = "normalizedString")] public List<string> VineyardDescription { get { return this.vineyardDescriptionField; } set { this.vineyardDescriptionField = value; } } public TemperatureDimension HarvestTemperature { get { return this.harvestTemperatureField; } set { this.harvestTemperatureField = value; } }[System.Xml.Serialization.XmlElementAttribute("ShortDescription", DataType = "normalizedString")] public List<string> ShortDescription { get { return this.shortDescriptionField; } set { this.shortDescriptionField = value; } }[System.Xml.Serialization.XmlElementAttribute("WineRatingRater")] public List<RaterType> WineRatingRater { get { return this.wineRatingRaterField; } set { this.wineRatingRaterField = value; } }[System.Xml.Serialization.XmlElementAttribute("WineRatingScore", DataType = "normalizedString")] public List<string> WineRatingScore { get { return this.wineRatingScoreField; } set { this.wineRatingScoreField = value; } }[System.Xml.Serialization.XmlElementAttribute("WineRatingReview", DataType = "normalizedString")] public List<string> WineRatingReview { get { return this.wineRatingReviewField; } set { this.wineRatingReviewField = value; } } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(WineAndAlcoholProductTypeWine)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema = false)] public enum ItemChoiceType1 { Beer, Spirits, Wine, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum WineAndAlcoholVariationDataParentage { parent, child, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum WineAndAlcoholVariationDataVariationTheme { Color, [System.Xml.Serialization.XmlEnumAttribute("Color-ItemDisplayWeight")] ColorItemDisplayWeight, [System.Xml.Serialization.XmlEnumAttribute("Color-PatternName")] ColorPatternName, [System.Xml.Serialization.XmlEnumAttribute("Color-Size")] ColorSize, Flavor, [System.Xml.Serialization.XmlEnumAttribute("Flavor-Size")] FlavorSize, ItemDisplayWeight, [System.Xml.Serialization.XmlEnumAttribute("ItemDisplayWeight-Color")] ItemDisplayWeightColor, [System.Xml.Serialization.XmlEnumAttribute("ItemDisplayWeight-ItemPackageQuantity")] ItemDisplayWeightItemPackageQuantity, [System.Xml.Serialization.XmlEnumAttribute("ItemDisplayWeight-Size")] ItemDisplayWeightSize, [System.Xml.Serialization.XmlEnumAttribute("ItemPackageQuantity-ItemDisplayWeight")] ItemPackageQuantityItemDisplayWeight, PatternName, [System.Xml.Serialization.XmlEnumAttribute("PatternName-Flavor")] PatternNameFlavor, [System.Xml.Serialization.XmlEnumAttribute("PatternName-ItemDisplayWeight")] PatternNameItemDisplayWeight, [System.Xml.Serialization.XmlEnumAttribute("PatternName-Size")] PatternNameSize, Size, [System.Xml.Serialization.XmlEnumAttribute("Size-Color")] SizeColor, [System.Xml.Serialization.XmlEnumAttribute("Size-ItemDisplayWeight")] SizeItemDisplayWeight, [System.Xml.Serialization.XmlEnumAttribute("Size-PatternName")] SizePatternName, }

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
	[System.SerializableAttribute()]
	public enum RaterType
	{

		/// <remarks/>
		RP,

		/// <remarks/>
		WE,

		/// <remarks/>
		WS,
	}
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AmazonMWSTester.Amazon
{
	public partial class Sports : ProductProductData
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class SportsVariationData { private AmperageDimension amperageField; private LengthDimension bikeRimSizeField; private VolumeDimension capacityField; private List<string> departmentField; private LengthDimension diameterField; private LengthDimension divingHoodThicknessField; private DegreeDimension golfLoftField; private LengthDimension heightField; private LengthDimension itemThicknessField; private LengthDimension lengthField; private LengthDimension shaftLengthField; private TemperatureRatingDimension temperatureRatingField; private VolumeDimension volumeField; private WattageDimension wattageField; private WeightDimension weightField; private WeightDimension weightSupportedField; private LengthDimension wheelSizeField; private LengthDimension widthField; private static System.Xml.Serialization.XmlSerializer serializer; public SportsVariationDataParentage Parentage { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool ParentageSpecified { get; set; } public SportsVariationDataVariationTheme VariationTheme { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool VariationThemeSpecified { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string AgeGenderCategory { get; set; } public decimal BootSize { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool BootSizeSpecified { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Bounce { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string CalfSize { get; set; } public decimal Caliber { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool CaliberSpecified { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Club { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Color { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Curvature { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string CustomerPackageType { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Design { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string FencingPommelType { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Flavor { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string GolfFlex { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string GripSize { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string GripType { get; set; } public string Hand { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string HeadSize { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Irons { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string LensColor { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string LieAngle { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string LineCapacity { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string LineWeight { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Material { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Model { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string NumberOfItems { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Occupancy { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string Quantity { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")] public string Rounds { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string ShaftMaterial { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string ShaftType { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Shape { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Size { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Style { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string TensionLevel { get; set; }[System.Xml.Serialization.XmlElementAttribute(DataType = "normalizedString")] public string Wood { get; set; } public SportsVariationData() { this.widthField = new LengthDimension(); this.wheelSizeField = new LengthDimension(); this.weightSupportedField = new WeightDimension(); this.weightField = new WeightDimension(); this.wattageField = new WattageDimension(); this.volumeField = new VolumeDimension(); this.temperatureRatingField = new TemperatureRatingDimension(); this.shaftLengthField = new LengthDimension(); this.lengthField = new LengthDimension(); this.itemThicknessField = new LengthDimension(); this.heightField = new LengthDimension(); this.golfLoftField = new DegreeDimension(); this.divingHoodThicknessField = new LengthDimension(); this.diameterField = new LengthDimension(); this.departmentField = new List<string>(); this.capacityField = new VolumeDimension(); this.bikeRimSizeField = new LengthDimension(); this.amperageField = new AmperageDimension(); } public AmperageDimension Amperage { get { return this.amperageField; } set { this.amperageField = value; } } public LengthDimension BikeRimSize { get { return this.bikeRimSizeField; } set { this.bikeRimSizeField = value; } } public VolumeDimension Capacity { get { return this.capacityField; } set { this.capacityField = value; } }[System.Xml.Serialization.XmlElementAttribute("Department", DataType = "normalizedString")] public List<string> Department { get { return this.departmentField; } set { this.departmentField = value; } } public LengthDimension Diameter { get { return this.diameterField; } set { this.diameterField = value; } } public LengthDimension DivingHoodThickness { get { return this.divingHoodThicknessField; } set { this.divingHoodThicknessField = value; } } public DegreeDimension GolfLoft { get { return this.golfLoftField; } set { this.golfLoftField = value; } } public LengthDimension Height { get { return this.heightField; } set { this.heightField = value; } } public LengthDimension ItemThickness { get { return this.itemThicknessField; } set { this.itemThicknessField = value; } } public LengthDimension Length { get { return this.lengthField; } set { this.lengthField = value; } } public LengthDimension ShaftLength { get { return this.shaftLengthField; } set { this.shaftLengthField = value; } } public TemperatureRatingDimension TemperatureRating { get { return this.temperatureRatingField; } set { this.temperatureRatingField = value; } } public VolumeDimension Volume { get { return this.volumeField; } set { this.volumeField = value; } } public WattageDimension Wattage { get { return this.wattageField; } set { this.wattageField = value; } } public WeightDimension Weight { get { return this.weightField; } set { this.weightField = value; } } public WeightDimension WeightSupported { get { return this.weightSupportedField; } set { this.weightSupportedField = value; } } public LengthDimension WheelSize { get { return this.wheelSizeField; } set { this.wheelSizeField = value; } } public LengthDimension Width { get { return this.widthField; } set { this.widthField = value; } } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(SportsVariationData)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class SportsEngineDisplacement { private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlAttributeAttribute()] public SportsEngineDisplacementUnitOfMeasure unitOfMeasure { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool unitOfMeasureSpecified { get; set; }[System.Xml.Serialization.XmlTextAttribute()] public decimal Value { get; set; } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(SportsEngineDisplacement)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public partial class SportsMaximumPitchSpeed { private static System.Xml.Serialization.XmlSerializer serializer;
[System.Xml.Serialization.XmlAttributeAttribute()] public SportsMaximumPitchSpeedUnitOfMeasure unitOfMeasure { get; set; }[System.Xml.Serialization.XmlIgnoreAttribute()] public bool unitOfMeasureSpecified { get; set; }[System.Xml.Serialization.XmlTextAttribute()] public decimal Value { get; set; } private static System.Xml.Serialization.XmlSerializer Serializer { get { if ((serializer == null)) { serializer = new System.Xml.Serialization.XmlSerializer(typeof(SportsMaximumPitchSpeed)); } return serializer; } } 
}
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsProductType { SportingGoods, GolfClubHybrid, GolfClubIron, GolfClubPutter, GolfClubWedge, GolfClubWood, GolfClubs, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsIdentityPackageType { bulk, frustration_free, traditional, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsLithiumBatteryPackaging { batteries_contained_in_equipment, batteries_only, batteries_packed_with_equipment, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsTargetGender { male, female, unisex, }

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsVariationDataParentage { parent, child, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsVariationDataVariationTheme { AgeGenderCategory, Amperage, BikeRimSize, BikeRimSizeMaterial, BootSize, BootSizeCalfSize, CalfSize, Caliber, CaliberRounds, Capacity, Color, ColorDesign, ColorFlavor, ColorItemThickness, ColorLength, ColorLensColor, ColorQuantity, ColorRounds, ColorShaftMaterial, ColorShaftType, ColorShape, ColorSize, ColorStyle, ColorTensionLevel, ColorWattage, ColorWeight, ColorWheelSize, ColorWidth, Curvature, CurvatureHand, Design, DesignFlavor, DesignLength, DesignLensColor, DesignShaftMaterial, DesignShaftType, DesignShape, DesignSize, DesignStyle, DesignTensionLevel, DesignWeight, DesignWheelSize, DesignWidth, Diameter, DivingHoodThickness, FencingPommelType, FencingPommelTypeGripType, Flavor, FlavorSize, GolfFlex, GolfFlexGolfLoft, GolfFlexMaterial, GolfFlexShaftMaterial, GolfLoft, GolfLoftShaftMaterial, GripSize, GripSizeGripType, GripSizeHeadSize, GripType, Hand, HandBounceGolfFlex, HandBounceShaftTypeGolfFlex, HandClubGolfFlex, HandClubShaftTypeGolfFlex, HandGolfFlex, HandIronsGolfFlex, HandIronsLieAngleGolfFlex, HandIronsLieAngleShaftTypeGolfFlex, HandIronsShaftTypeGolfFlex, HandLength, HandLieAngle, HandLieAngleGolfFlex, HandLieAngleLength, HandLieAngleShaftType, HandLieAngleShaftTypeGolfFlex, HandLieAngleShaftTypeLength, HandGolfLoftBounceGolfFlex, HandGolfLoftBounceShaftTypeGolfFlex, HandGolfLoftGolfFlex, HandGolfLoftShaftTypeGolfFlex, HandModel, HandModelLength, HandModelShaftType, HandModelShaftTypeLength, HandShaftLength, HandShaftMaterialGolfFlex, HandShaftMaterialGolfFlexGolfLoft, HandShaftType, HandShaftTypeGolfFlex, HandShaftTypeLength, HandSize, HandTensionLevel, HandWeight, HandWoodGolfFlex, HandWoodShaftTypeGolfFlex, HeadSize, HeadSizeShape, Height, HeightSize, HeightStyle, HeightWeight, HeightWidth, ItemThickness, Length, LengthLineCapacity, LengthLineWeight, LengthMaterial, LengthShaftType, LengthSize, LengthStyle, LengthWeight, LengthWeightSupported, LengthWidth, LensColor, LensColorMaterial, LensColorShape, LineCapacity, LineCapacitySize, LineCapacityWeight, LineWeight, LineWeightSize, Material, MaterialShape, MaterialSize, MaterialStyle, MaterialTensionLevel, MaterialWeight, MaterialWheelSize, MaterialWidth, Quantity, QuantityShape, QuantitySize, QuantityWeight, Rounds, RoundsSize, ShaftMaterial, ShaftMaterialShaftType, ShaftType, Shape, ShapeSize, ShapeTensionLevel, ShapeWeight, Size, SizeStyle, SizeTensionLevel, SizeWattage, SizeWeight, SizeWeightSupported, SizeWheelSize, SizeWidth, Style, StyleTensionLevel, StyleWeight, StyleWheelSize, StyleWidth, TemperatureRating, TemperatureRatingColor, TemperatureRatingDesign, TemperatureRatingHand, TemperatureRatingLength, TemperatureRatingMaterial, TemperatureRatingShape, TemperatureRatingSize, TensionLevel, TensionLevelWeight, TensionLevelWeightSupported, Wattage, Weight, WeightSupported, WeightWidth, WheelSize, WheelSizeWeight, Width, CustomerPackageType, [System.Xml.Serialization.XmlEnumAttribute("ColorName-CustomerPackageType")] ColorNameCustomerPackageType, [System.Xml.Serialization.XmlEnumAttribute("SizeName-CustomerPackageType")] SizeNameCustomerPackageType, [System.Xml.Serialization.XmlEnumAttribute("SizeName-ColorName-CustomerPackageType")] SizeNameColorNameCustomerPackageType, [System.Xml.Serialization.XmlEnumAttribute("StyleName-CustomerPackageType")] StyleNameCustomerPackageType, [System.Xml.Serialization.XmlEnumAttribute("SizeName-StyleName-CustomerPackageType")] SizeNameStyleNameCustomerPackageType, }
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)] public enum SportsEngineDisplacementUnitOfMeasure { CID, l, cc, }

}
